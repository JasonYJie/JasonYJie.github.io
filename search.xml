<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Codeforces 1133 VP 小结</title>
      <link href="/2019/04/10/cf1133vp/"/>
      <url>/2019/04/10/cf1133vp/</url>
      
        <content type="html"><![CDATA[<h1 id="比赛时间">比赛时间</h1><p>​ 2019-04-10 08:00～10:30</p><a id="more"></a><h2 id="a">$ A $</h2><p><a href="http://codeforces.com/contest/1133/problem/A" target="_blank" rel="noopener">Codeforces 1133 a</a></p><p>一句话题意：</p><p>给定两个形如 <span class="math inline">\(“ xx : xx ”\)</span> 格式的24制时间，求两个时间的中间时间点，并按照相同格式输出</p><p>解法：</p><p>模拟就好了，一开始不冷静，想复杂了。</p><p>冷静一下其实把两个时间转换成分钟，然后在按照格式处理就好了</p><h2 id="b">$ B $</h2><p><a href="http://codeforces.com/contest/1133/problem/B" target="_blank" rel="noopener">Codeforces 1133 B</a></p><p>一句话题意：</p><p>给定 <span class="math inline">\(n\)</span> 个数字，并给出一个整数 <span class="math inline">\(k\)</span> 问最多有多少对加和可以是 <span class="math inline">\(k\)</span> 的倍数</p><p>输出组数 <span class="math inline">\(* 2\)</span> 为答案</p><p>注意方案中不可以服用，只可以在一组中选择一次</p><p>解法：</p><p>看到数据范围 <span class="math inline">\(n\)</span> 非常大，所以 <span class="math inline">\(n^2\)</span> 的复杂度肯定不行</p><p>换个方向，从<span class="math inline">\(k\)</span> 入手，就非常简单了，其实考虑一对和是 <span class="math inline">\(k\)</span> 的倍数，说明两个数字 %<span class="math inline">\(k\)</span> 以后余数加和为 <span class="math inline">\(k\)</span></p><p>所以我们只要把所有数字的余数用桶记录一下，然后遍历所有余数的数量处理就好了</p><h2 id="c">$ C $</h2><p><a href="http://codeforces.com/contest/1133/problem/C" target="_blank" rel="noopener">Codeforces 1133 C</a></p><p>一句话题意：</p><p>给定 <span class="math inline">\(n\)</span> 个数字，问最多可以选择多少个数字，所有被选定的数字两两只差 <span class="math inline">\(5\)</span></p><p>解法：</p><p>直接使用尺取法，排完序以后，先把最开始允许的加进去，然后一点一点往后推，取 <span class="math inline">\(max\)</span> 就好了</p><p>尺取法的具体介绍和题目下午更新</p><h2 id="d">$ D $</h2><p><a href="http://codeforces.com/contest/1133/problem/D" target="_blank" rel="noopener">Codeforces 1133 D</a></p><p>一句话题意：</p><p>解法：</p><h2 id="e">$ E $</h2><p><a href="http://codeforces.com/contest/1133/problem/E" target="_blank" rel="noopener">Codeforces 1133 E</a></p><p>一句话题意：</p><p>解法：</p><h2 id="f1">$ F1 $</h2><p><a href="http://codeforces.com/contest/1133/problem/F1" target="_blank" rel="noopener">Codeforces 1133 F1</a></p><p>一句话题意：</p><p>解法：</p><h2 id="f2">$ F2 $</h2><p><a href="http://codeforces.com/contest/1133/problem/F2" target="_blank" rel="noopener">Codeforces 1133 F2</a></p><p>一句话题意：</p><p>解法：</p><p>总结：</p><p>​ 1.还是菜的抠脚</p><p>​ 2.时间规划不太对</p><p>​ 3.细节考虑不周全</p><p>​ 4.容易慌乱，代码冗余，思维过于复杂，绕弯子。</p><h1 id="over"><span class="math inline">\(Over!\)</span></h1>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> 1133 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 1003 B</title>
      <link href="/2019/03/23/cf1003/cf1003b/"/>
      <url>/2019/03/23/cf1003/cf1003b/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="codeforces-1003-b-题解"><span class="math inline">\(Codeforces 1003 B\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/1003/problem/B" target="_blank" rel="noopener">1003B</a></p><p>一句话题意：给定 <span class="math inline">\(n\)</span> 个数字，要求求出至少分成多少子集，可以使得每个组中的元素不重复</p><p>（子集中选择的元素可以不连续）</p><a id="more"></a><p>因为不连续，直接开一个 <span class="math inline">\(rub\)</span> 记一下每个数字的数量，求最大数量就好了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 110</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[N],ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> tmp=read();</span><br><span class="line">        a[tmp]++;</span><br><span class="line">        ans=max(ans,a[tmp]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> 1003 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 1003 A</title>
      <link href="/2019/03/23/cf1003/cf1003a/"/>
      <url>/2019/03/23/cf1003/cf1003a/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="codeforces-1003-a-题解"><span class="math inline">\(Codeforces 1003 A\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/1003/problem/A" target="_blank" rel="noopener">1003A</a></p><p>一句话题意：给定 <span class="math inline">\(n\)</span> 个数字，要求求出至少分成多少子集，可以使得每个组中的元素不重复</p><p>（子集中选择的元素可以不连续）</p><a id="more"></a><p>因为不连续，直接开一个 <span class="math inline">\(rub\)</span> 记一下每个数字的数量，求最大数量就好了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 110</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[N],ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> tmp=read();</span><br><span class="line">        a[tmp]++;</span><br><span class="line">        ans=max(ans,a[tmp]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> 1003 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 999 F</title>
      <link href="/2019/03/23/cf999/cf999f/"/>
      <url>/2019/03/23/cf999/cf999f/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="codeforces-999-f-题解"><span class="math inline">\(Codeforces 999 F\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/999/problem/F" target="_blank" rel="noopener">999F</a></p><p>一句话题意：有 <span class="math inline">\(n\)</span> 个人 <span class="math inline">\(n∗k\)</span> 张卡片，每个人都要分到 <span class="math inline">\(k\)</span> 张卡片。 卡片上有数字，每个人也有一个数字，当一个人分到 <span class="math inline">\(i\)</span> 张和他的数字一样的卡片时会有 <span class="math inline">\(h_i\)</span> 的贡献</p><p>求最大贡献。</p><a id="more"></a><p>一眼看数据范围和题面就是 <span class="math inline">\(DP\)</span> 所以往 <span class="math inline">\(DP\)</span> 上去想</p><p>我们不要 “横着” 去考虑每张牌， "竖着考虑"，考虑每种牌</p><p>我们把所有的牌和每个人喜欢的牌，都用两个 <span class="math inline">\(rub\)</span> 去考虑一下</p><p><span class="math inline">\(dp_{i j}\)</span> 表示当前有 <span class="math inline">\(i\)</span> 个人喜欢同一张牌，并且第 <span class="math inline">\(i\)</span> 个人选择 <span class="math inline">\(j\)</span> 张喜欢的牌</p><p>那么显然转移就是</p><p><span class="math inline">\(dp_{ij} = max( dp_{ij} , dp_{i-1,j-l} + v_l ) (1 \le l \le min(j,k) )\)</span></p><p>最后对于每一种牌统计一下就好了</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 510</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="built_in">read</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="built_in">while</span>(!isdigit(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">while</span>(isdigit(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="built_in">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="built_in">print</span>(<span class="keyword">int</span> x)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="built_in">while</span>(x);</span><br><span class="line">    <span class="built_in">while</span>(tot) putchar(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,maxn,k,ans;</span><br><span class="line"><span class="keyword">int</span> peo[N*N],tot[N*N],h[N];</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">5010</span>][<span class="number">5010</span>];</span><br><span class="line"><span class="keyword">int</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    n=<span class="built_in">read</span>();</span><br><span class="line">    k=<span class="built_in">read</span>();</span><br><span class="line">    <span class="built_in">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*k;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp=<span class="built_in">read</span>();</span><br><span class="line">        tot[tmp]++;</span><br><span class="line">        maxn=<span class="built_in">max</span>(maxn,tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp=<span class="built_in">read</span>();</span><br><span class="line">        peo[tmp]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">        h[i]=<span class="built_in">read</span>();</span><br><span class="line">    <span class="built_in">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n*k;j++)</span><br><span class="line">            <span class="built_in">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> l=<span class="number">1</span>;l&lt;=<span class="built_in">min</span>(j,k);l++)</span><br><span class="line">                dp[i][j]=<span class="built_in">max</span>(dp[i][j],dp[i<span class="number">-1</span>][j-l]+h[l]);</span><br><span class="line">    <span class="built_in">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=maxn;i++)</span><br><span class="line">        <span class="built_in">if</span>(peo[i])</span><br><span class="line">            ans+=dp[peo[i]][tot[i]];</span><br><span class="line">    printf(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="built_in">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 999 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 999 E</title>
      <link href="/2019/03/23/cf999/cf999e/"/>
      <url>/2019/03/23/cf999/cf999e/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="codeforces-999-e-题解"><span class="math inline">\(Codeforces 999 E\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/999/problem/E" target="_blank" rel="noopener">999E</a></p><p>一句话题意：给定 <span class="math inline">\(n\)</span> 个点，<span class="math inline">\(m\)</span> 条 <strong>单向</strong>边 和一个源点 <span class="math inline">\(s\)</span></p><p>要求求出需要加多少条边可以使得每个点都可以到达源点</p><a id="more"></a><p>因为数据范围只有 <span class="math inline">\(5000\)</span> 所以可以 <span class="math inline">\(O (n^2)\)</span> 做。</p><p>首先对于源点 <span class="math inline">\(s\)</span> 进行 <span class="math inline">\(dfs\)</span> 对于它可以到达的点进行标记</p><p>然后对于每个无法到达的点进行 <span class="math inline">\(dfs\)</span> 将他们可以到达并且 <span class="math inline">\(s\)</span> 无法到达的点取消标记</p><p>最后仍然有标记的点就是答案，做一下统计就可以了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 5010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,s;</span><br><span class="line"><span class="keyword">int</span> vis[N],in[N];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line">structt st</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> to,nxt;</span><br><span class="line">&#125;edge[N&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> hed[N],cnt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cnt++;</span><br><span class="line">    edge[cnt].to=y;</span><br><span class="line">    edge[cnt].nxt=hed[x];</span><br><span class="line">    hed[x]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">    vis[x]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=hed[x];i;i=edge[i].nxt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v=edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(!vis[v])</span><br><span class="line">            dfs(v);</span><br><span class="line"> &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vis[x]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=hed[x];i;i=edge[i].nxt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v=edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(!vis[v])</span><br><span class="line">        &#123;</span><br><span class="line">            in[v]=<span class="number">0</span>;</span><br><span class="line">            dfs1(v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    m=read();</span><br><span class="line">    s=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        x=read(),y=read();</span><br><span class="line">        add(x,y); </span><br><span class="line">    &#125;</span><br><span class="line">    dfs(s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])</span><br><span class="line">            in[i]=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(in[i])</span><br><span class="line">        &#123;</span><br><span class="line">            dfs1(i);</span><br><span class="line">            <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(in[i])</span><br><span class="line">            ans++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 999 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> dfs </tag>
            
            <tag> Tarjan </tag>
            
            <tag> 图论 </tag>
            
            <tag> 强连通分量 </tag>
            
            <tag> 缩点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 999 D</title>
      <link href="/2019/03/23/cf999/cf999d/"/>
      <url>/2019/03/23/cf999/cf999d/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="codeforces-999-d-题解"><span class="math inline">\(Codeforces 999 D\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/999/problem/D" target="_blank" rel="noopener">999D</a></p><p>一句话题意：</p><p>给定一个长度为 <span class="math inline">\(n\)</span> 的整数序列和一个 <span class="math inline">\(m\)</span> 每次操作可以使一个数 <span class="math inline">\(+1\)</span> 。</p><p>要求对于所有数字 %mod m% 之后得到 <span class="math inline">\(0 ~ m-1\)</span> 个余数的个数都是 <span class="math inline">\(\frac{n}{m}\)</span> 个</p><a id="more"></a><p>我们考虑既然操作只有一种 <span class="math inline">\(+1\)</span> 的话，贪心的去想说明，如果当前 <span class="math inline">\(i\)</span> 这个余数的个数缺的话，肯定是从之前最近的饱和元素转移过来的</p><p>所以我们只要利用 <span class="math inline">\(Set\)</span> 维护一个当前还未饱和的元素，每次查找</p><p>如果当前这个元素已经大于 <span class="math inline">\(Set\)</span> 中最大的元素了，那么直接置为 <span class="math inline">\(set\)</span> 中最小元素</p><p>否则，二分查找出第一个 <strong>大于等于</strong> 它的元素，然后用<span class="math inline">\(rub\)</span> 记录一下当前的元素操作</p><p>最后贪心求 <span class="math inline">\(ans\)</span> 和数组就好了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:B)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 200010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> ll x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">ll ans;</span><br><span class="line">ll a[N],rub[N];</span><br><span class="line"><span class="built_in">set</span> &lt;ll&gt; s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">        s.insert(i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i]=read();</span><br><span class="line">        ll tmp=a[i]%m,x;</span><br><span class="line">        <span class="keyword">if</span>(tmp&gt;*s.rbegin()) x=*s.begin();</span><br><span class="line">        <span class="keyword">else</span> x= *s.lower_bound(tmp);</span><br><span class="line">        rub[x]++;</span><br><span class="line">        <span class="keyword">if</span>(rub[x] == n/m) s.erase(x);</span><br><span class="line">        ans+=(x-tmp+m)%m;</span><br><span class="line">        a[i]+=(x-tmp+m)%m;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld "</span>,a[i]);<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 999  Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> STL </tag>
            
            <tag> 思维 </tag>
            
            <tag> 二分查找 </tag>
            
            <tag> 贪心 </tag>
            
            <tag> Set </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 999 C</title>
      <link href="/2019/03/23/cf999/cf999c/"/>
      <url>/2019/03/23/cf999/cf999c/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="codeforces-999-c-题解"><span class="math inline">\(Codeforces 999 C\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/999/problem/C" target="_blank" rel="noopener">999C</a></p><p>一句话题意：</p><p>给定一个长度为 <span class="math inline">\(n\)</span> 的字符串，并且给定一个操作次数 <span class="math inline">\(k\)</span></p><p>操作规则： 对于 <span class="math inline">\(26\)</span> 个小写 <span class="math inline">\(a ~ z\)</span> 的字母 按照顺序，如果当前第 <span class="math inline">\(i\)</span> 个字母存在，则删除最左边的</p><p>要求输出执行完毕串</p><a id="more"></a><p>我们可以对字符串每一个字符进行排序</p><p>第一关键字为字符大小</p><p>第二关键字为字符位置</p><p>然后将前 <span class="math inline">\(k\)</span> 个进行标记，最后输出就好了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a.b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 400010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,k,vis[N];</span><br><span class="line">structt st</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">char</span> s;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="keyword">char</span> s[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(st x,st y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.s==y.s)</span><br><span class="line">        <span class="keyword">return</span> x.id&lt;y.id;</span><br><span class="line">    <span class="keyword">return</span> x.s&lt;y.s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp2</span><span class="params">(st x,st y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.id&lt;y.id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    k=read();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        a[i].s=s[i],a[i].id=i;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">        vis[a[i].id]=<span class="number">1</span>;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp2);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>,a[i].s);<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 999 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> lv0 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 999 B</title>
      <link href="/2019/03/23/cf999/cf999b/"/>
      <url>/2019/03/23/cf999/cf999b/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="codeforces-999-b-题解"><span class="math inline">\(Codeforces 999 B\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/999/problem/B" target="_blank" rel="noopener">999B</a></p><p>一句话题意：</p><p>给定一个长度为 <span class="math inline">\(n\)</span> 的字符串，每次可以将 <span class="math inline">\(n\)</span> 的 <span class="math inline">\(1 ~ 因数\)</span> 的长度 进行字符串反转</p><p>要求恢复原串</p><a id="more"></a><p>直接按照题意进行模拟，把所有长度的因数都找到，然后暴力翻转</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 110</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">char</span> s[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=(<span class="number">1</span>+i)/<span class="number">2</span>;j++)</span><br><span class="line">                swap(s[j],s[i-j+<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,s+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 999 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> lv0 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 999 A</title>
      <link href="/2019/03/23/cf999/cf999a/"/>
      <url>/2019/03/23/cf999/cf999a/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="codeforces-999-a-题解"><span class="math inline">\(Codeforces 999 A\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/999/problem/A" target="_blank" rel="noopener">999A</a></p><p>一句话题意：</p><p>给定 <span class="math inline">\(n\)</span> 个整数和一个整数 <span class="math inline">\(k\)</span> ，可以从左右两端删除 <span class="math inline">\(\leq k\)</span> 的数字，直到</p><p>不可以删除或者全部删除为止,输出删除个数</p><a id="more"></a><p>直接模拟题意，从左右两端分别做一次删除就好了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 110</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,ans,k;</span><br><span class="line"><span class="keyword">int</span> a[N],vis[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    k=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        a[i]=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;=k)</span><br><span class="line">            ans++,vis[i]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;=k&amp;&amp;!vis[i])</span><br><span class="line">            ans++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 999 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> lv0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 988 F</title>
      <link href="/2019/03/22/cf988/cf988f/"/>
      <url>/2019/03/22/cf988/cf988f/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="codeforces-988-f-题解"><span class="math inline">\(Codeforces 988 F\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/988/problem/F" target="_blank" rel="noopener">988F</a></p><p>一句话题意：</p><p>有三个整数 <span class="math inline">\(a,n,m\)</span>，<span class="math inline">\(a\)</span> 是终点坐标，给出 <span class="math inline">\(n\)</span> 个范围（<span class="math inline">\(l,r\)</span>）表示这块区域下雨，<span class="math inline">\(m\)</span> 把伞(<span class="math inline">\(p,w\)</span> )在点 <span class="math inline">\(p\)</span> 有重量为 <span class="math inline">\(w\)</span> 的伞。</p><p>小明可以携带任意数量的伞，经过下雨处时必须要撑伞，小明每走一个单位长度消耗的体力与他所携带伞的重量相同，</p><p>求小明从 <span class="math inline">\(0~a\)</span>所需消耗的最少体力，若无解则输出 <span class="math inline">\(-1\)</span>。</p><a id="more"></a><p>一眼看的 <span class="math inline">\(DP\)</span></p><p><span class="math inline">\(dp_i\)</span> 表示当前到达第 <span class="math inline">\(i\)</span> 段的最小花费（最小段！不是点，小细节）</p><p><span class="math inline">\(rain_i\)</span> 表示当前第 <span class="math inline">\(i\)</span> 段是否下雨</p><p><span class="math inline">\(u_i\)</span> 表示当前第 <span class="math inline">\(i\)</span> 段是否有伞</p><p>考虑转移</p><p>如果这段没雨</p><p><span class="math inline">\(dp_i = dp_{i-1}\)</span></p><p>如果有雨</p><p><span class="math inline">\(dp_i = min(dp_i , dp_j+(i-j)*u_i)\)</span></p><p><span class="math inline">\((0 \le j \le i-1)\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 2010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> x,n,m;</span><br><span class="line">ll dp[N],rain[N],u[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x=read();</span><br><span class="line">    n=read();</span><br><span class="line">    m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> l=read(),r=read();</span><br><span class="line">        <span class="keyword">if</span>(l&gt;r) swap(l,r);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j=l;j&lt;r;j++)</span><br><span class="line">            rain[j]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(u,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(u));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll tmp=read(),w=read();</span><br><span class="line">        u[tmp]=min(u[tmp],w);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">    dp[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=x;i++)</span><br><span class="line">        <span class="keyword">if</span>(!rain[i<span class="number">-1</span>])</span><br><span class="line">            dp[i]=dp[i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j=i<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">                <span class="keyword">if</span>(u[j]!=u[x+<span class="number">2</span>])</span><br><span class="line">                    dp[i]=min(dp[i],dp[j]+(i-j)*u[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span>(dp[x]==dp[x+<span class="number">2</span>])</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dp[x]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 988 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> DP </tag>
            
            <tag> lv0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 988 E</title>
      <link href="/2019/03/22/cf988/cf988e/"/>
      <url>/2019/03/22/cf988/cf988e/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="codeforces-988-e-题解"><span class="math inline">\(Codeforces 988 E\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/988/problem/E" target="_blank" rel="noopener">988E</a></p><p>一句话题意：给定一个 <span class="math inline">\(11e18 \leq x \leq 1e18\)</span> 的数字 。</p><p>要求判断是否可以通过交换相邻位置的数字使得数字可以被25整除.</p><a id="more"></a><p>直接考虑，其实 <span class="math inline">\(25\)</span> 的倍数的数字特点就是结尾为 <span class="math inline">\(00 25 50 75\)</span> 这四种。</p><p>所以我们只需要判断这四种是否存在吧，并且每次更新答案</p><p>最后注意前导零的问题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 110</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> s[N],s1[N];</span><br><span class="line"><span class="keyword">int</span> n,ans,flag,len;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">check</span><span class="params">(<span class="keyword">char</span> a,<span class="keyword">char</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> tmp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">        s[i]=s1[i]; </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=len<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        <span class="keyword">if</span>(s[i]==a)</span><br><span class="line">        &#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j=i;j&lt;len<span class="number">-1</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                tmp++;</span><br><span class="line">                swap(s[j],s[j+<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=len<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        <span class="keyword">if</span>(s[i]==b)</span><br><span class="line">        &#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j=i;j&lt;len<span class="number">-2</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                tmp++;</span><br><span class="line">                swap(s[j],s[j+<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span>(cnt==<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">'0'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len<span class="number">-2</span>;i++)</span><br><span class="line">                <span class="keyword">if</span>(s[i]!=<span class="string">'0'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    tmp+=i;</span><br><span class="line">                    flag=<span class="number">1</span>;</span><br><span class="line">                    ans=min(ans,tmp);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">            ans=min(ans,tmp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;   </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s1);</span><br><span class="line">    len=<span class="built_in">strlen</span>(s1);</span><br><span class="line">    ans=<span class="number">0x7fffffff</span>;</span><br><span class="line">    check(<span class="string">'0'</span>,<span class="string">'0'</span>);</span><br><span class="line">    check(<span class="string">'0'</span>,<span class="string">'5'</span>);</span><br><span class="line">    check(<span class="string">'5'</span>,<span class="string">'2'</span>);</span><br><span class="line">    check(<span class="string">'5'</span>,<span class="string">'7'</span>);</span><br><span class="line">    <span class="keyword">if</span>(flag)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 988 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> lv0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 988 D</title>
      <link href="/2019/03/22/cf988/cf988d/"/>
      <url>/2019/03/22/cf988/cf988d/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="codeforces-988-d-题解"><span class="math inline">\(Codeforces 988 D\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/988/problem/D" target="_blank" rel="noopener">988D</a></p><p>一句话题意：给定一个整数集合，要求你找出一个最大的子集，使得子集内的任意两两整数差为 <span class="math inline">\(2\)</span> 的幂次</p><a id="more"></a><p>看到数据范围以后显然是不能暴力的，所以只能搞一搞式子</p><p>假设集合内目前只有三个元素：<span class="math inline">\(x，y，z\)</span> 且 <span class="math inline">\(x \le y \le z\)</span></p><p>则根据题意，有如下关系：</p><p><span class="math inline">\(z - y = 2^a (1)\)</span></p><p><span class="math inline">\(y - x = 2^b (2)\)</span></p><p><span class="math inline">\(z - x = 2^c (3)\)</span></p><p>所以由 <span class="math inline">\((1)\)</span> 式 <span class="math inline">\(+ (2)\)</span> 式，再与 <span class="math inline">\((3)\)</span> 式联立，得 <span class="math inline">\(z - x = 2^a + 2^b = 2^c\)</span>，由此可得，当且仅当</p><p><span class="math inline">\(2^c = 2 * 2^b = 2 * 2^a\)</span> 时上述等式成立，即 <span class="math inline">\(a = b = c - 1\)</span>;</p><p>所以由 <span class="math inline">\(a = b\)</span>, 得 <span class="math inline">\(2^a = 2^b\)</span>，即 <span class="math inline">\(z - y = y - x\)</span>，所以 <span class="math inline">\(x，y，z\)</span> 构成等差数列，</p><p>由上可知，当集合中有四个元素的时候，<span class="math inline">\(x &lt; y &lt; z &lt; k\)</span> 时，显然就不成立了，因为你要满足从中挑出的任意三个元素满足等差数列</p><p>比如 <span class="math inline">\(&lt;x, y, k&gt;\)</span> 或 <span class="math inline">\(&lt;x, z, k&gt;\)</span> 时就不成立了，因为 <span class="math inline">\(x, y, z, k\)</span> 满足等差数列，且公差不能为 <span class="math inline">\(0\)</span> ，所以它的三元组子集就未必满足构成等差这个条件了。</p><p>找到这个规律之后就很好做了</p><p>因为最多只有三个</p><p>我们可以使用 <span class="math inline">\(set\)</span> 存一下数据，然后每次查一下当前 <span class="math inline">\(a_i. a_i+j. a_i+2*j\)</span> 是否都存在，如果都存在的话，直接输出就好了</p><p>两个，一个都是这样</p><p>然后就可以了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 200010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> ll x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll a[N];</span><br><span class="line"><span class="built_in">set</span>&lt;ll&gt;s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i]=read();</span><br><span class="line">        s.insert(a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">register</span> ll j=<span class="number">1</span>;j&lt;=<span class="number">2e9</span>;j*=<span class="number">2</span>)</span><br><span class="line">            <span class="keyword">if</span>(s.count(a[i])&amp;&amp;s.count(a[i]+j)&amp;&amp;s.count(a[i]+j*<span class="number">2</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">puts</span>(<span class="string">"3"</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%lld %lld %lld\n"</span>,a[i],a[i]+j,a[i]+j+j);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">register</span> ll j=<span class="number">1</span>;j&lt;=<span class="number">2e9</span>;j*=<span class="number">2</span>)</span><br><span class="line">            <span class="keyword">if</span>(s.count(a[i]+j))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">puts</span>(<span class="string">"2"</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%lld %lld \n"</span>,a[i],a[i]+j);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"1"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,a[<span class="number">1</span>]);      </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 988 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> 思维 </tag>
            
            <tag> Set </tag>
            
            <tag> lv1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 1005 VP 小结</title>
      <link href="/2019/03/18/cf1005vp/"/>
      <url>/2019/03/18/cf1005vp/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><a id="more"></a><h2 id="a">$ A $</h2><p><a href="http://codeforces.com/contest/1005/problem/A" target="_blank" rel="noopener">Codeforces 1005 A</a></p><p>一句话题意：给定 <span class="math inline">\(n\)</span> 个数，要求找出形如 <span class="math inline">\(1 2 3 ...\)</span> 由 <span class="math inline">\(1\)</span> 到 <span class="math inline">\(x\)</span> 的个数</p><p>要求输出个数与所有 <span class="math inline">\(x\)</span></p><p><span class="math inline">\(eg:\)</span></p><pre><code>71 2 3 1 2 3 423 4</code></pre><p>直接模拟找就好了，复杂度用线性就可以了</p><p>代码看订正篇吧</p><h2 id="b">$ B $</h2><p><a href="http://codeforces.com/contest/1005/problem/B" target="_blank" rel="noopener">Codeforces 1005 B</a></p><p>一句话题意：给定两个不同的字符串 <span class="math inline">\(s1\)</span> <span class="math inline">\(s2\)</span> 每次允许操作对其中一个字符串总左边删除一个字符，要求求出最后使得两个字符串完全相同的最小次数</p><p>如果都删完以后，两个空字符串可以视为相同，显然答案就是两个长度的加和</p><p>数据范围一看是线性，说明一定不会有什么奇奇怪怪的操作。转化一下题意，其实就是让你找到两个字符串的最长后缀，最后搞搞答案就好了</p><p>详细看订正</p><h2 id="c">$ C $</h2><p><a href="http://codeforces.com/contest/1005/problem/C" target="_blank" rel="noopener">Codeforces 1005 C</a></p><p>一句话题意：给定 <span class="math inline">\(n\)</span> 个整数，定义对于 <span class="math inline">\(a_i\)</span> 这个数字如果可以找到一个 <span class="math inline">\(a_j (i!=j)\)</span> 使得 <span class="math inline">\(a_i + a_j\)</span> 是 <span class="math inline">\(2\)</span> 的幂次的话则可以保留，否则删除。</p><p>其中还有一下小细节可以去题目中看</p><p>数据范围很大，必须线性。但是 <span class="math inline">\(a_i\)</span> 只有<span class="math inline">\(10^9\)</span> 那么说明 <span class="math inline">\(2\)</span> 的幂次最大到 <span class="math inline">\(30+\)</span></p><p>所以我们就预想处理出 <span class="math inline">\(2\)</span> 的幂次，然后用 <span class="math inline">\(map\)</span> 判一下存不存在就好了</p><p>记得要考虑多个相同数字出现的情况。</p><p>具体看订正篇</p><h2 id="d">$ D $</h2><p><a href="http://codeforces.com/contest/1005/problem/D" target="_blank" rel="noopener">Codeforces 1005 D</a></p><p>一句话题意：给定一个长度为 <span class="math inline">\(1 ~ 200010\)</span> 的数字，要求可以在任意位置进行任意次数的划分，问最多可以将数字划分成多少个3的倍数</p><p>我们这样考虑</p><p>可以对于数字划分分情况讨论</p><p>当一位是 <span class="math inline">\(3\)</span> 的倍数的时候显然可以有贡献</p><p>当两位是 <span class="math inline">\(3\)</span> 的倍数的时候一样可以有贡献</p><p>当三位时，我们考虑前两位的余数 只可能是 <span class="math inline">\([1 1]\)</span> 或者 <span class="math inline">\([2 2]\)</span> 因为其他情况在两位的时候已经都被处理掉了</p><p>那么我们再考虑第三位的余数可能是 <span class="math inline">\(0 1 2\)</span> 组合可以得到如下组合</p><p><span class="math inline">\([1 1 0]\)</span></p><p><span class="math inline">\([2 2 0]\)</span></p><p>这两种单选第三位就可以有贡献</p><p><span class="math inline">\([1 1 1]\)</span></p><p><span class="math inline">\([2 2 2]\)</span></p><p>这两种全部选就可以有贡献</p><p><span class="math inline">\([1 1 2]\)</span></p><p><span class="math inline">\([2 2 1]\)</span></p><p>这两种选最后两位一样有贡献</p><p>所以三位的连续数字不论怎样都会有 <span class="math inline">\(1\)</span> 的贡献。所以我们直接根据几个条件，线性扫过去就好了</p><p>代码看订正</p><h2 id="e1">$ E1 $</h2><p><a href="http://codeforces.com/contest/1005/problem/E1" target="_blank" rel="noopener">Codeforces 1005 E1</a></p><p>一句话题意：给定 <span class="math inline">\(n\)</span> 个数字 和一个 <span class="math inline">\(m\)</span> 问有多少个区间是以 <span class="math inline">\(m\)</span> 为中位数的区间</p><p>这道题之前做过原题</p><p><a href="https://www.ac-un.com/p/2145" target="_blank" rel="noopener">「CQOI2009」中位数图</a></p><p>直接处理一下 <span class="math inline">\(m\)</span> 左边的数字和右边的数字，然后组合算一下贡献就好了</p><p>分析和具体解法看订正</p><h2 id="e2">$ E2 $</h2><p><a href="http://codeforces.com/contest/1005/problem/E2" target="_blank" rel="noopener">Codeforces 1005 E2</a></p><p>emmmmmm.....</p><p>考试没有开</p><p>看订正吧</p><h2 id="f">$ F $</h2><p><a href="http://codeforces.com/contest/1005/problem/F" target="_blank" rel="noopener">Codeforces 1005 F</a></p><p>没来得及开</p><p>看了一眼别人订正，好像是 <span class="math inline">\(bfs + dfs +\)</span> 最短路树</p><p>具体看订正</p><p>总结： 1.手速还是很差劲，要加快手速和码力了</p><p>2.脑袋还是不够快，再快一点！！</p><p>3.最后就是实力还是菜！继续加油吧</p><h1 id="over"><span class="math inline">\(Over !\)</span></h1>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> 1005 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 988 C</title>
      <link href="/2019/03/15/cf988/cf988c/"/>
      <url>/2019/03/15/cf988/cf988c/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="codeforces-988-c-题解"><span class="math inline">\(Codeforces 988 C\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/988/problem/C" target="_blank" rel="noopener">988C</a></p><p>一句话题意：给定 <span class="math inline">\(n\)</span> 个数组，问是否存在两个不同数组，任意删去一个数字后，加和相同</p><p>如果可以输出 <span class="math inline">\(YES\)</span> 并且输出对应的组编号与下标编号</p><p>否则输出 <span class="math inline">\(NO\)</span></p><a id="more"></a><p>我们考虑虽然输入的数据范围很大，量很多。但是最多也不会超过输入复杂度。所以我们完全可以利用 <span class="math inline">\(Vector 和 Map\)</span> 来直接进行模拟</p><p><span class="math inline">\(Vector\)</span> 开二维，一维静态，一维动态用来存数据</p><p><span class="math inline">\(map_1\)</span> 用来存当前的和是否已经存在过</p><p><span class="math inline">\(map_2\)</span> 用来存当前的和对应的数组编号</p><p><span class="math inline">\(map_1\)</span> 用来存当前的和对应数组下的下标编号</p><p>然后直接输入的时候边输入边做就好了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 200010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> ll x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span> &lt;ll&gt; a[N];</span><br><span class="line"><span class="keyword">int</span> k,n[N];</span><br><span class="line"><span class="built_in">map</span>&lt;ll ,<span class="keyword">int</span> &gt; m1;</span><br><span class="line"><span class="built_in">map</span>&lt;ll ,<span class="keyword">int</span> &gt; m2;</span><br><span class="line"><span class="built_in">map</span>&lt;ll ,<span class="keyword">int</span> &gt; m3;</span><br><span class="line">ll sum[N],now;</span><br><span class="line"><span class="keyword">int</span> a1,a2,a3,a4,flag; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    k=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        n[i]=read();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n[i];j++)</span><br><span class="line">        &#123;</span><br><span class="line">            ll tmp=read();</span><br><span class="line">            sum[i]+=tmp;</span><br><span class="line">            a[i].push_back(tmp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n[i];j++)</span><br><span class="line">            <span class="keyword">if</span>(m1[sum[i]-a[i][j]])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(m2[sum[i]-a[i][j]]==i) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,i,j+<span class="number">1</span>);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,m2[sum[i]-a[i][j]],m3[sum[i]-a[i][j]]);</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;                   </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                m1[sum[i]-a[i][j]]=<span class="number">1</span>;</span><br><span class="line">                m2[sum[i]-a[i][j]]=i;</span><br><span class="line">                m3[sum[i]-a[i][j]]=j+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 988 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> STL </tag>
            
            <tag> Vector </tag>
            
            <tag> Map </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 988 A</title>
      <link href="/2019/03/15/cf988/cf988a/"/>
      <url>/2019/03/15/cf988/cf988a/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="codeforces-988-a-题解"><span class="math inline">\(Codeforces 988 A\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/988/problem/A" target="_blank" rel="noopener">988A</a></p><p>一句话题意：一句话题意：给定 <span class="math inline">\(n\)</span> 个数 问是否存在 <span class="math inline">\(k\)</span> 个不同的数</p><p>如果存在 输出这 <span class="math inline">\(k\)</span>个数的下标</p><p>否则输出 <span class="math inline">\(NO\)</span></p><a id="more"></a><p>直接模拟题意，开一个 <span class="math inline">\(rub\)</span> 记录当前 <span class="math inline">\(a_i\)</span> 是否有，如果没有 <span class="math inline">\(sum++\)</span></p><p>最后判断一下就好了。</p><p>没什么好讲的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 110</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,cnt,k;</span><br><span class="line"><span class="keyword">int</span> rub[N];</span><br><span class="line"><span class="keyword">int</span> c[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();k=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp=read();</span><br><span class="line">        <span class="keyword">if</span>(!rub[tmp])</span><br><span class="line">        &#123;</span><br><span class="line">            c[++cnt]=i;</span><br><span class="line">            rub[tmp]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(k&gt;cnt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,c[i]);<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 988 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> lv0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 988 B</title>
      <link href="/2019/03/15/cf988/cf988b/"/>
      <url>/2019/03/15/cf988/cf988b/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="codeforces-988-b-题解"><span class="math inline">\(Codeforces 988 B\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/988/problem/B" target="_blank" rel="noopener">988B</a></p><p>一句话题意：给定 <span class="math inline">\(n\)</span> 个字符串 问是否可以重新排列使每个字符串是前一个的子串</p><p>如果可以输出 <span class="math inline">\(YES\)</span> 并且输出排列</p><p>否则输出 <span class="math inline">\(NO\)</span></p><a id="more"></a><p>我们考虑如果一个字符串是另一个字符串的子串的话，那么子串的长度一定 <span class="math inline">\(\leq\)</span> 父串的长度</p><p>所以其实这道题直接按照长度排个序，然后暴力判断一下 <span class="math inline">\(s_i s_{i+1}\)</span>的关系就好了 <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 110</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,flag;</span><br><span class="line">structt st</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">1100</span>];</span><br><span class="line">    <span class="keyword">int</span> len;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(st x, st y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.len&lt;y.len;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,a[i].s);</span><br><span class="line">        a[i].len=<span class="built_in">strlen</span>(a[i].s);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j=<span class="number">0</span>;j&lt;a[i+<span class="number">1</span>].len;j++)</span><br><span class="line">        &#123;   </span><br><span class="line">            <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> k=<span class="number">0</span>;k&lt;a[i].len;k++)</span><br><span class="line">                <span class="keyword">if</span>(a[i].s[k]==a[i+<span class="number">1</span>].s[j+k])</span><br><span class="line">                    sum++;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(sum==a[i].len)</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,a[i].s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 988 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> lv0 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 1066 VP 小结</title>
      <link href="/2019/03/15/cf1066vp/"/>
      <url>/2019/03/15/cf1066vp/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="比赛时间2019-03-25-08001000">比赛时间<span class="math inline">\(2019-03-25 08:00～10:00\)</span></h1><a id="more"></a><h2 id="a">$ A $</h2><p><a href="http://codeforces.com/contest/1066/problem/A" target="_blank" rel="noopener">Codeforces 1066 A</a></p><p>一句话题意： 给定 <span class="math inline">\(T\)</span> 组数据，每组数据包含四个整数。</p><p>给定横坐标终点 <span class="math inline">\(x\)</span> ，每 <span class="math inline">\(v\)</span> 个距离就会有一个灯塔。其中 <span class="math inline">\(l ~ r\)</span> 的距离被遮挡。问最后可以看到多少个灯塔</p><p>直接按照模拟题意就好了</p><p>注意处理细节，边界问题</p><h2 id="b">$ B $</h2><p><a href="http://codeforces.com/contest/1066/problem/B" target="_blank" rel="noopener">Codeforces 1066 B</a></p><p>一句话题意：</p><p>给定 <span class="math inline">\(n\)</span> 个 <span class="math inline">\(0 1\)</span>数字。<span class="math inline">\(1\)</span> 代表标号为 <span class="math inline">\(i\)</span> 的坐标点可以影响 <span class="math inline">\(i-r+1 ~ i+r-1\)</span> 这段区间。</p><p>问最少需要多少个点可以覆盖全部n个坐标</p><p>模拟题意。用 <span class="math inline">\(now\)</span> 记录当前覆盖到的最远点，然后倒着扫点，如果可以覆盖则加上 <span class="math inline">\(O( n ^ 2)\)</span></p><p>据说有 <span class="math inline">\(O ( n )\)</span> 复杂度。</p><p>学会看订正吧</p><h2 id="c">$ C $</h2><p><a href="http://codeforces.com/contest/1066/problem/C" target="_blank" rel="noopener">Codeforces 1066 C</a></p><p>一句话题意：</p><p>给定 <span class="math inline">\(n\)</span> 个操作。共有三种操作</p><p>第一种：<span class="math inline">\(&quot; l &quot;\)</span> 操作在整个数组之前加一个数字</p><p>第二种：<span class="math inline">\(&quot; r &quot;\)</span> 操作在整个数组之后加一个数字</p><p>第三种：<span class="math inline">\(&quot; ？ &quot;\)</span> 操作 询问一个数字，与数组头尾距离的 <span class="math inline">\(min\)</span></p><p>因为范围很大显然是不能模拟的</p><p>我们思考其实只有最后一种操作是 <span class="math inline">\(O (n ^ 2 )\)</span>的</p><p>所以直接开一个数组 <span class="math inline">\(a_i\)</span> 表示 <span class="math inline">\(i\)</span> 这个数字在数组中的位置</p><p>最后直接取 <span class="math inline">\(min (r - a_i , a_i + l)\)</span></p><h2 id="d">$ D $</h2><p><a href="http://codeforces.com/contest/1066/problem/D" target="_blank" rel="noopener">Codeforces 1066 D</a></p><p>一句话题意：</p><p>给定 <span class="math inline">\(n\)</span> 个物品， <span class="math inline">\(m\)</span> 个盒子，并告诉每一个盒子的容量 <span class="math inline">\(k\)</span></p><p>现在已知每个物品的体积，求最大装入数量</p><p>其中装入方法：</p><p>首先会从 <span class="math inline">\(1\)</span> 号物品一直装，如果遇到第一个装不下的物品，会丢掉第一个物品</p><p>按照题意模拟</p><p>首先肯定的是，最后一个物品一定会装进去，那么每次从后往前扫装物品直到不能装就好了</p><h2 id="e">$ E $</h2><p><a href="http://codeforces.com/contest/1066/problem/E" target="_blank" rel="noopener">Codeforces 1066 E</a></p><p>一句话题意：</p><p>给定两个极大的 <span class="math inline">\(2\)</span> 进制 <span class="math inline">\(01\)</span> 串每次进行对 <span class="math inline">\(b\)</span>进行右移操作。并且 <span class="math inline">\(ans += a &amp; b\)</span> 求 <span class="math inline">\(ans\)</span></p><p>我们考虑其实改变的只有 <span class="math inline">\(b\)</span> 所以答案就是对于 <span class="math inline">\(a_i\)</span> 的每一位</p><p>如果当前这位 为<span class="math inline">\(1\)</span></p><p>贡献就是 <span class="math inline">\(2^i * sum_i\)</span> <span class="math inline">\(sum_i\)</span> 表示当前 <span class="math inline">\(b\)</span> 数字最高位到第 <span class="math inline">\(i\)</span> 位的 <span class="math inline">\(1\)</span> 的数量</p><p>如果问 <span class="math inline">\(0\)</span> 贡献就是 <span class="math inline">\(0\)</span></p><p>所以只要预处理 <span class="math inline">\(2\)</span> 的幂次和 <span class="math inline">\(sum_i\)</span> 就好了</p><p>最后统计答案</p><h2 id="f">$ F $</h2><p><a href="http://codeforces.com/contest/1066/problem/F" target="_blank" rel="noopener">Codeforces 1066 F</a></p><p>一句话题意： 给定第一象限内的 <span class="math inline">\(n\)</span> 个点，将 <span class="math inline">\(max(x_i,y_i)\)</span>值相同的点定为 <span class="math inline">\(level(max(x_i,y_i))\)</span></p><p>移动是只能是上下左右方向移动</p><p>求一条最短路线访问到所有的点，并且保证在访问 <span class="math inline">\(level(i+1)\)</span> 的点之前访问完所有的 <span class="math inline">\(level(i)\)</span>的点.</p><p>考试没出，据说是 <span class="math inline">\(dp\)</span> 感觉有点麻烦</p><p>看订正吧</p><p>总结：</p><ol type="1"><li><p>状态不是很好，前几道出的有点慢</p></li><li><p>细节考虑的还是不够全面</p></li><li><p>手速加快，代码能力再加快</p></li></ol><p>#<span class="math inline">\(Over!\)</span></p>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> 1066 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 1003 VP 小结</title>
      <link href="/2019/03/15/cf1003/cf1003vp/"/>
      <url>/2019/03/15/cf1003/cf1003vp/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="比赛时间2019-03-15-08001000">比赛时间<span class="math inline">\(2019-03-15 08:00～10:00\)</span></h1><a id="more"></a><h2 id="a">$ A $</h2><p><a href="http://codeforces.com/contest/1003/problem/A" target="_blank" rel="noopener">Codeforces 1003 a</a></p><p>一句话题意： 给定 <span class="math inline">\(n\)</span> 个数字，要求求出至少分成多少子集，可以使得每个组中的元素不重复</p><p>（子集中选择的元素可以不连续）</p><p>直接暴力找重复数字最多的就好了</p><h2 id="b"><span class="math inline">\(B\)</span></h2><p><a href="http://codeforces.com/contest/1003/problem/b" target="_blank" rel="noopener">Codeforces 1003 b</a></p><p>一句话题意：给定三个整数 <span class="math inline">\(a\)</span> <span class="math inline">\(b\)</span> <span class="math inline">\(x\)</span> 要求构造出一个长度为 <span class="math inline">\(a+b\)</span> 的 <span class="math inline">\(01\)</span> 串。并且保证 <span class="math inline">\(s_i != s_{i+1}\)</span> 的数对只有 <span class="math inline">\(x\)</span> 个</p><p>首先我们构造出 <span class="math inline">\(x-1\)</span> 对不同组，然后再将其次的构造进去就好了</p><p>（我觉得这道题考验代码基础的，自己写的有点长，别人的非常短，比较巧妙。订正看吧</p><h2 id="c">$ C $</h2><p><a href="http://codeforces.com/contest/1003/problem/c" target="_blank" rel="noopener">Codeforces 1003 C</a></p><p>一句话题意：给定 <span class="math inline">\(n\)</span> 个整数，要求找出区间长度 <span class="math inline">\(\geq k\)</span>的最大平均数，保留十五位输出</p><p>先做一遍前缀和，然后暴力 <span class="math inline">\(O(n^2)\)</span> 求 <span class="math inline">\(max\)</span> 就好了</p><h2 id="d">$ D $</h2><p><a href="http://codeforces.com/contest/1003/problem/D" target="_blank" rel="noopener">Codeforces 1003 D</a></p><p>给定一个数量为 <span class="math inline">\(n\)</span> 的 <span class="math inline">\(2^d\)</span> <span class="math inline">\(2\)</span> 的幂次方集合</p><p><span class="math inline">\(q\)</span> 次询问</p><p>每次询问是否可以由集合中的元素构成</p><p>可以输出数量</p><p>否则输出<span class="math inline">\(&quot;-1&quot;\)</span></p><p>考虑其实 <span class="math inline">\(1e9\)</span> 大小的数最大就到 <span class="math inline">\(2^32\)</span></p><p>所以可以开一个 <span class="math inline">\(map\)</span> 记录一下元素的数量每次暴力去做数量就好了</p><h2 id="e">$ E $</h2><p><a href="http://codeforces.com/contest/1003/problem/E" target="_blank" rel="noopener">Codeforces 1003 E</a></p><p>一句话题意：给定三个整数 <span class="math inline">\(n\)</span> <span class="math inline">\(k\)</span> <span class="math inline">\(d\)</span></p><p>要求构造一颗由 <span class="math inline">\(n\)</span> 个点，直径为 <span class="math inline">\(k\)</span> ，最大点度数为 <span class="math inline">\(d\)</span> 的无向树</p><p>先构造出一颗 直径为 <span class="math inline">\(k\)</span> 的链，然后 <span class="math inline">\(dfs\)</span> 在链上限制加儿子。</p><p>然后处理一下例如 <span class="math inline">\(d == 1\)</span> 这种特殊情况。</p><p>细节想想清就好了</p><h2 id="f">$ F $</h2><p><a href="http://codeforces.com/contest/1003/problem/F" target="_blank" rel="noopener">Codeforces 1003 F</a></p><p>一句话题意：给定一个由 <span class="math inline">\(n\)</span> 个单词（字符串）构成的长字符串，单词之间用空格相隔。</p><p>现在允许你进行仅一次操作：</p><p>对于 两个包含单词个数、长度相同 （<span class="math inline">\(i , j (i \neq j)\)</span> 长度为 <span class="math inline">\(k\)</span> 的相同长度），且互不重叠区间。</p><p>允许将两段区间中的单词均有首字母组合形成一个新单词。</p><p>例如</p><pre><code>6to be or not to beTB or not TB</code></pre><p>要求你求出操作后的最短长度</p><p>直接先用 <span class="math inline">\(map\)</span> 离散化一下，然后我们把单词的长度做一个前缀和（不要忘记处理空格的长度）</p><p>最后暴力枚举不重叠符合条件区间，更新答案</p><p>总结：<br>1. 思考细节好一点点</p><p>2.<span class="math inline">\(fst\)</span> 概率好像低了一点点</p><p>3.速度好了一点</p><p>4.继续联系，加快手速</p><p>5.多思考如何应该更巧妙的写代码</p><h1 id="over"><span class="math inline">\(Over !\)</span></h1>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> 1003 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforce 999 VP 总结</title>
      <link href="/2019/03/14/cf999/cf999vp%E6%80%BB%E7%BB%93/"/>
      <url>/2019/03/14/cf999/cf999vp%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="比赛时间-2019-03-14-08001000">比赛时间 2019-03-14 08:00～10:00</h1><a id="more"></a><h2 id="a"><span class="math inline">\(A\)</span></h2><p><a href="http://codeforces.com/contest/999/problem/A" target="_blank" rel="noopener">Codeforces 999 A</a></p><p>一句话题意：给定 <span class="math inline">\(n\)</span> 个整数和一个整数 <span class="math inline">\(k\)</span> ，可以从左右两端删除 <span class="math inline">\(\leq k\)</span> 的数字，直到</p><p>不可以删除或者全部删除为止</p><p>模拟</p><p><a href>订正</a></p><h2 id="b"><span class="math inline">\(B\)</span></h2><p><a href="http://codeforces.com/contest/999/problem/B" target="_blank" rel="noopener">Codeforces 999 B</a></p><p>一句话题意：给定一个长度为 <span class="math inline">\(n\)</span> 的字符串，每次可以将 <span class="math inline">\(n\)</span> 的 <span class="math inline">\(1 ~ 因数\)</span> 的长度 进行字符串反转</p><p>要求恢复原串</p><p>模拟</p><p><a href>订正</a></p><h2 id="c"><span class="math inline">\(C\)</span></h2><p><a href="http://codeforces.com/contest/999/problem/C" target="_blank" rel="noopener">Codeforces 999 C</a></p><p>一句话题意：给定一个长度为 <span class="math inline">\(n\)</span> 的字符串，并且给定一个操作次数 <span class="math inline">\(k\)</span></p><p>操作规则： 对于 <span class="math inline">\(26\)</span> 个小写 <span class="math inline">\(a ~ z\)</span> 的字母 按照顺序，如果当前第 <span class="math inline">\(i\)</span> 个字母存在，则删除最左边的</p><p>要求输出执行完毕串</p><p>直接先排序</p><p>第一关键字字母</p><p>第二关键字位置</p><p>然后把前 <span class="math inline">\(k\)</span> 个直接置 <span class="math inline">\(0\)</span></p><p>最后按照位置排序 输出</p><p>模拟</p><p><a href>订正</a> ~</p><h2 id="d"><span class="math inline">\(D\)</span></h2><p><a href="http://codeforces.com/contest/999/problem/D" target="_blank" rel="noopener">Codeforces 999 D</a></p><p>一句话题意：给定一个长度为 <span class="math inline">\(n\)</span> 的整数序列和一个 <span class="math inline">\(m\)</span> 每次操作可以使一个数 <span class="math inline">\(+1\)</span> ，要求对于所有数字 %mod m% 之后得到 <span class="math inline">\(0 ~ m-1\)</span> 个余数的个数都是 <span class="math inline">\(\frac{n}{m}\)</span> 个</p><p>要求输出最简操作数，和操作后的序列</p><p>考场没 <span class="math inline">\(A\)</span></p><p>只想到了贪心数量怎么求，序列不会</p><p>考试结束以后冷静一下，只要二分就好了，按照贪心模拟加</p><p>解法看订正吧</p><p><a href>订正</a></p><h2 id="e"><span class="math inline">\(E\)</span></h2><p><a href="http://codeforces.com/contest/999/problem/E" target="_blank" rel="noopener">Codeforces 999 E</a></p><p>一句话题意：给定 <span class="math inline">\(n\)</span> 个点，<span class="math inline">\(m\)</span> 条 <strong>单向</strong>边 和一个源点 <span class="math inline">\(s\)</span> 要求求出需要加多少条边可以使得每个点都可以到达源点</p><p>直接强连通缩点，感觉有点板题</p><p><a href>订正</a></p><h2 id="f"><span class="math inline">\(F\)</span></h2><p><a href="http://codeforces.com/contest/999/problem/F" target="_blank" rel="noopener">Codeforces 999 F</a></p><p>一句话题意： 有 <span class="math inline">\(n\)</span> 个人 <span class="math inline">\(n∗k\)</span> 张卡片，每个人都要分到 <span class="math inline">\(k\)</span> 张卡片。 卡片上有数字，每个人也有一个数字，当一个人分到 <span class="math inline">\(i\)</span> 张和他的数字一样的卡片时会有 <span class="math inline">\(h_i\)</span> 的贡献</p><p>求最大贡献。</p><p>明显的 <span class="math inline">\(DP\)</span></p><p>题解看订正</p><p><a href>订正</a></p><p>#<em>Over!</em></p>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 999 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法竞赛入门经典-第六章</title>
      <link href="/2019/03/13/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E5%85%A5%E9%97%A8%E7%BB%8F%E5%85%B8-6/"/>
      <url>/2019/03/13/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E5%85%A5%E9%97%A8%E7%BB%8F%E5%85%B8-6/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> Book </category>
          
          <category> 算法竞赛入门经典 </category>
          
          <category> 第二部分——基础篇 </category>
          
          <category> 第六章——数据结构基础 </category>
          
          <category> 6.1 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Book </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 栈 </tag>
            
            <tag> 队列 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 988 VP 小结</title>
      <link href="/2019/03/13/cf988/cf988vp/"/>
      <url>/2019/03/13/cf988/cf988vp/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="比赛时间-2019-03-13-08001000">比赛时间 <span class="math inline">\(2019-03-13\)</span> <span class="math inline">\(08:00～10:00\)</span></h1><a id="more"></a><h2 id="a"><span class="math inline">\(A\)</span></h2><p><a href="http://codeforces.com/contest/988/problem/a" target="_blank" rel="noopener">Codeforces988A</a></p><p>一句话题意：</p><p>给定 <span class="math inline">\(n\)</span> 个数 问是否存在 <span class="math inline">\(k\)</span> 个不同的数，如果存在输出这 <span class="math inline">\(k\)</span> 个数的下标 否则输出 <span class="math inline">\(NO\)</span></p><p>直接模拟判一下就好了</p><p>一次 <span class="math inline">\(A\)</span></p><p><a href>订正</a></p><h2 id="b"><span class="math inline">\(B\)</span></h2><p><a href="http://codeforces.com/contest/988/problem/b" target="_blank" rel="noopener">Codeforces988B</a></p><p>一句话题意：</p><p>给定 <span class="math inline">\(n\)</span> 个字符串 问是否可以重新排列使每个字符串是前一个的子串</p><p>如果可以输出 <span class="math inline">\(YES\)</span> 并且输出排列</p><p>否则输出<span class="math inline">\(NO\)</span></p><p>考虑子串的长度一定 <span class="math inline">\(\leq\)</span> 原串的长度。所以直接按照长度排序</p><p>然后暴力判断是否是子串就好了</p><p>一次<span class="math inline">\(A\)</span></p><p><a href>订正</a></p><h2 id="c"><span class="math inline">\(C\)</span></h2><p><a href="http://codeforces.com/contest/988/problem/c" target="_blank" rel="noopener">Codeforces988C</a></p><p>一句话题意：</p><p>给定 <span class="math inline">\(n\)</span> 个数组，问是否存在两个不同数组，任意删去一个数字后，加和相同</p><p>这道题单纯的考 <span class="math inline">\(STL\)</span> 的应用</p><p>（我最菜的地方）</p><p>其实冷静一下很好做</p><p>用 <span class="math inline">\(Vector\)</span> 存一下数组，然后用<span class="math inline">\(map\)</span> 存一下当前的加和</p><p>然后暴力判断一下就好了</p><p>就是不知道为什么 <span class="math inline">\(fst\)</span> 了。。。。</p><p>看订正吧。。。。。</p><p><a href>订正</a></p><h2 id="d"><span class="math inline">\(D\)</span></h2><p><a href="http://codeforces.com/contest/988/problem/d" target="_blank" rel="noopener">Codeforces988D</a></p><p>一句话题意：</p><p>给定一个整数集合，要求你找出一个最大的子集，使得子集内的任意两两整数差为 <span class="math inline">\(2\)</span> 的幂次</p><p>不要被题意和巨大的数据范围骗了</p><p>冷静一下其实可以发现子集最大也就三个 （证明看订正</p><p>所以我们可以枚举<span class="math inline">\(2\)</span>的幂次 然后找到三个公差等于该数的就好了</p><p><a href>订正</a></p><h2 id="e"><span class="math inline">\(E\)</span></h2><p><a href="http://codeforces.com/contest/988/problem/e" target="_blank" rel="noopener">Codeforces988E</a></p><p>一句话题意：给定一个 <span class="math inline">\(1 \leq x \leq 1e18\)</span> 的数字 。</p><p>要求判断是否可以通过交换相邻位置的数字使得数字可以被25整除</p><p>其实就是一个小细节的模拟</p><p><span class="math inline">\(25\)</span> 的倍数的后缀 分别是 <span class="math inline">\(00 25 75 50\)</span> 四种情况，所以每次拿四种情况更新一下答案就好了</p><p>一定要注意含有前导<span class="math inline">\(0\)</span> 的情况</p><p><a href>订正</a></p><h2 id="f"><span class="math inline">\(F\)</span></h2><p><a href="http://codeforces.com/contest/988/problem/f" target="_blank" rel="noopener">Codeforces988F</a></p><p>考试没开，今天菜的一批（凸显了自己 <span class="math inline">\(STL\)</span> 差的问题 暴露的很及时）</p><p>一句话题意：</p><p>有三个整数 <span class="math inline">\(a,n,m\)</span>，<span class="math inline">\(a\)</span> 是终点坐标，给出 <span class="math inline">\(n\)</span> 个范围（<span class="math inline">\(l,r\)</span>）表示这块区域下雨，<span class="math inline">\(m\)</span> 把伞(<span class="math inline">\(p,w\)</span> )在点 <span class="math inline">\(p\)</span> 有重量为 <span class="math inline">\(w\)</span> 的伞。</p><p>小明可以携带任意数量的伞，经过下雨处时必须要撑伞，小明每走个一单位长度消耗的体力与他所携带伞的重量相同，</p><p>求小明从 <span class="math inline">\(0~a\)</span>所需消耗的最少体力，若无解则输出 <span class="math inline">\(-1\)</span>。</p><p>一眼看的 <span class="math inline">\(DP\)</span></p><p>具体做法看订正</p><p><a href>订正</a></p><p>总结：</p><ol type="1"><li><p><span class="math inline">\(STL\)</span> 掌握的太差了，要多加练习</p></li><li><p>细节考虑稍好了一点点</p></li><li><p>速度应该再快一点，继续提高代码能力，减少 <span class="math inline">\(FST\)</span> 的概率</p></li></ol><h1 id="over"><span class="math inline">\(Over !\)</span></h1>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 988 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 977 D</title>
      <link href="/2019/03/12/cf977/cf977d/"/>
      <url>/2019/03/12/cf977/cf977d/</url>
      
        <content type="html"><![CDATA[<h1 id="codeforces-977-d-题解"><span class="math inline">\(Codeforces 977 D\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/977/problem/d" target="_blank" rel="noopener">977D</a></p><p>题意：</p><p>给你一个被打乱的序列，每次操作，都要把这个数除以 <span class="math inline">\(3\)</span> 或者乘 <span class="math inline">\(2\)</span> ，</p><p>使之变成下一个数，输出排序后满足条件的原序列数。 ​ <a id="more"></a></p><p>思考：</p><p>我们分析一下其实这个给定数组中的每一个数字都是 <span class="math inline">\(3\)</span> 的幂次与 <span class="math inline">\(2\)</span> 的幂次的加和</p><p>所以我们需要重新排序</p><p>第一关键词，首先按照一个数字能够整除 <span class="math inline">\(3\)</span> 的次数，这显然是一个递减序列</p><p>如果次数相同时，那么只有乘 <span class="math inline">\(2\)</span> 的变大操作 ，所以此时把较大的放到后面</p><p>就可以了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 110</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> ll x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll a[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">get</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>((x%<span class="number">3</span>)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cnt++;</span><br><span class="line">        x/=<span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(ll x,ll y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll tmp1,tmp2;</span><br><span class="line">    tmp1=get(x);</span><br><span class="line">    tmp2=get(y);</span><br><span class="line">    <span class="keyword">if</span>(tmp1==tmp2) <span class="keyword">return</span> x&lt;y;</span><br><span class="line">    <span class="keyword">return</span> tmp1&gt;tmp2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        a[i]=read();</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld "</span>,a[i]);<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 977 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> lv0 </tag>
            
            <tag> 排序 </tag>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 977 E</title>
      <link href="/2019/03/12/cf977/cf977e/"/>
      <url>/2019/03/12/cf977/cf977e/</url>
      
        <content type="html"><![CDATA[<h1 id="codeforces-977-e-题解"><span class="math inline">\(Codeforces 977 E\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/977/problem/e" target="_blank" rel="noopener">977E</a></p><p>题意：</p><p>​​找到所有的单链环的个数 ​ ​ <a id="more"></a></p><p>思考：</p><p>很明显，一个单链环中的所有节点的 度都为<span class="math inline">\(2\)</span></p><p>所以直接对于整个图的点 <span class="math inline">\(dfs\)</span> 然后判一下边界就好了</p><p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 200010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,cnt,ans,flag;</span><br><span class="line"><span class="keyword">int</span> vis[N],du[N],hed[N];</span><br><span class="line">structt st</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> to,nxt;</span><br><span class="line">&#125;edge[N&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cnt++;</span><br><span class="line">    edge[cnt].to=y;</span><br><span class="line">    edge[cnt].nxt=hed[x];</span><br><span class="line">    hed[x]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> t,<span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(vis[x]==<span class="number">1</span>||du[x]!=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> ;    </span><br><span class="line">    &#125;   </span><br><span class="line">    vis[x]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(flag) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=hed[x];i;i=edge[i].nxt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v=edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v==fa) <span class="keyword">continue</span>; </span><br><span class="line">        <span class="keyword">if</span>(v==t)</span><br><span class="line">        &#123;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag) <span class="keyword">return</span> ;</span><br><span class="line">        dfs(v,t,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        x=read();</span><br><span class="line">        y=read();</span><br><span class="line">        du[y]++,du[x]++;</span><br><span class="line">        add(x,y);</span><br><span class="line">        add(y,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(du[i]==<span class="number">2</span>&amp;&amp;vis[i]==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            flag=<span class="number">0</span>;</span><br><span class="line">            dfs(i,i,i);</span><br><span class="line">            ans+=flag;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 977 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> DP </tag>
            
            <tag> lv0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 978 G</title>
      <link href="/2019/03/12/cf978/cf978g/"/>
      <url>/2019/03/12/cf978/cf978g/</url>
      
        <content type="html"><![CDATA[<h1 id="codeforces-978-g-题解"><span class="math inline">\(Codeforces 978 G\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/978/problem/G" target="_blank" rel="noopener">978G</a></p><p>题意：</p><p>​共有 <span class="math inline">\(n\)</span> 天，<span class="math inline">\(m\)</span> 场考试编号 <span class="math inline">\(1～m\)</span> ，每场考试给出</p><p><span class="math inline">\(s\)</span> 题库发布的时间（即代表从此时起可以开始复习这门科目）</p><p><span class="math inline">\(d\)</span> 这门科目考试的时间</p><p><span class="math inline">\(t\)</span> 需要复习的时间。</p><p>现在，每天你可以选择复习，或者休息，只能选其中一样！如果是考试的时间，则必须去考试！</p><p>问，你是否可以复习完所有科目并通过考试 如果可以，输出安排表，<span class="math inline">\(1～m\)</span> 代表复习功课，<span class="math inline">\(0\)</span> 表示休息，<span class="math inline">\(m+1\)</span> 表示考试。</p><p>如果不能，输出 <span class="math inline">\(-1\)</span>。 ​ <a id="more"></a></p><p>思考：</p><p>显然是一道贪心，考试时间越早的我们要越早复习完。</p><p>所以开一个 <span class="math inline">\(structt\)</span> 记录发布时间，考试时间，复习时间，和考试编号</p><p>然后对于一天我们就暴力去判断</p><p>考试的天必须考试</p><p>剩下的根据题目限制判断一下复习还是休息</p><p>最后，如果有的科目没有复习完则不合法，否则允许</p><p>注意：题目没有要求连续复习，所以允许隔天复习！！！</p><p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a.b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 110</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,flag;</span><br><span class="line">structt st</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> id,s,e,t;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="keyword">int</span> ans[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(st x,st y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.t&lt;y.t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i].id=i;</span><br><span class="line">        a[i].s=read();</span><br><span class="line">        a[i].t=read();</span><br><span class="line">        a[i].e=read();</span><br><span class="line">        ans[a[i].t]=m+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+m+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ans[i]) <span class="keyword">continue</span>;</span><br><span class="line">        flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>((a[j].e)&amp;&amp;(a[j].s&lt;=i)&amp;&amp;(a[j].t&gt;i))</span><br><span class="line">            &#123;</span><br><span class="line">                ans[i]=a[j].id;</span><br><span class="line">                a[j].e--;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        <span class="keyword">if</span>(a[j].e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,ans[i]);<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 978 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> lv0 </tag>
            
            <tag> 暴力 </tag>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 978 A</title>
      <link href="/2019/03/12/cf978/cf978a/"/>
      <url>/2019/03/12/cf978/cf978a/</url>
      
        <content type="html"><![CDATA[<h1 id="codeforces-978-a-题解"><span class="math inline">\(Codeforces 978 A\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/978/problem/A" target="_blank" rel="noopener">978A</a></p><p>一句话题意： ​ 给定 <span class="math inline">\(n\)</span> 个整数，要求输出数字种类，并且去除重复数字后输出，如果是重复的元素则以最后一次出现的次序完成输出。 ​ <a id="more"></a></p><p>思考：</p><p>数据范围 <span class="math inline">\(a_i\)</span> 很小，只需要开一个 <span class="math inline">\(rub\)</span>就好了，记录当前数字是否被访问过，如果没有访问过，记录访问，然后用一个数组记录一下。最后倒序输出</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">&#123;</span><br><span class="line">f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">ch=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">&#123;</span><br><span class="line">x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">ch=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">x/=<span class="number">10</span>;</span><br><span class="line">&#125;<span class="keyword">while</span>(x);</span><br><span class="line"><span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,maxn;</span><br><span class="line"><span class="keyword">int</span> a[N],rub[N],c[N],cnt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> c,<span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> c&gt;d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">a[i]=read(),maxn=max(maxn,a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line"><span class="keyword">if</span>(!rub[a[i]])</span><br><span class="line">&#123;</span><br><span class="line">rub[a[i]]=<span class="number">1</span>;</span><br><span class="line">c[++cnt]=a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cnt);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=cnt;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,c[i]);<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拓展： 考虑范围很大怎么做 其实也很简单 离散一下数字或者使用 <span class="math inline">\(map\)</span> 然后就可以按照之前的方法进行处理了</p>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 978 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> lv0 </tag>
            
            <tag> 暴力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 977 F</title>
      <link href="/2019/03/12/cf977/cf977f/"/>
      <url>/2019/03/12/cf977/cf977f/</url>
      
        <content type="html"><![CDATA[<h1 id="codeforces-977-f-题解"><span class="math inline">\(Codeforces 977 F\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/977/problem/f" target="_blank" rel="noopener">977F</a></p><p>题意：</p><p>给出一个 <span class="math inline">\(n\)</span> 和 <span class="math inline">\(n\)</span> 个数的序列，然后让你找到满足两个数之间相差为 <span class="math inline">\(1\)</span> 的存在的最长的序列。</p><p>要求输出他们的下标。 ​ <a id="more"></a></p><p>思考：</p><p>因为数据 <span class="math inline">\(a_i\)</span> 的范围很大，首先可以想到用 <span class="math inline">\(map\)</span> 进行离散化和存储</p><p>所以 <span class="math inline">\(map_i\)</span> 表示当前以 <span class="math inline">\(i\)</span> 这个数字结尾的最长序列长度</p><p>（有点像最长上升子序列的 <span class="math inline">\(O(nlogn)\)</span>的做法）</p><p>然后更新一下答案就好了</p><p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 200010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,cnt,en,ans;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;m;</span><br><span class="line"><span class="keyword">int</span> num[N];</span><br><span class="line"><span class="keyword">int</span> p[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        num[i]=read();</span><br><span class="line">        m[num[i]]=max(m[num[i]],m[num[i]<span class="number">-1</span>]+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(m[num[i]]&gt;ans)</span><br><span class="line">        &#123;</span><br><span class="line">            ans=m[num[i]];</span><br><span class="line">            en=num[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">        <span class="keyword">if</span>(num[i]==en)</span><br><span class="line">        &#123;</span><br><span class="line">            p[++cnt]=i;</span><br><span class="line">            en--;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cnt);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=cnt;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,p[i]);<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 977 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> lv0 </tag>
            
            <tag> STL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 978 E</title>
      <link href="/2019/03/12/cf978/cf978E/"/>
      <url>/2019/03/12/cf978/cf978E/</url>
      
        <content type="html"><![CDATA[<h1 id="codeforces-978e-题解"><span class="math inline">\(Codeforces 978E\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/978/problem/e" target="_blank" rel="noopener">978E</a></p><p>题意： ​ ​ ​共 <span class="math inline">\(N\)</span> 站，汽车每站变化 <span class="math inline">\(a_i\)</span> 人。问刚开始汽车上人数有多少种可能？ ​</p><a id="more"></a><p>思考：</p><p>因为是变化值，所以相当于差分了一下，先做一遍前缀和，变成每个车站当前有多少人。然后排序前缀和数组。</p><p><span class="math inline">\(- sum_1\)</span> 就是最少的人数边界</p><p><span class="math inline">\(w - sum_n\)</span> 就是最多的人数边界</p><p><span class="math inline">\(ans\)</span> 就是两者相减</p><p>注意： 做处理的时候有可能是单调，也就是说一直下车或者一直上车</p><p>最小边界要做处理： <span class="math inline">\(minn=max(-sum_i , 0)\)</span></p><p>最大边界要做处理： <span class="math inline">\(maxn=minn(w,w-sum[n])\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,x,y,ans,w;</span><br><span class="line"><span class="keyword">int</span> a[N],b[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    w=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        a[i]=read(),b[i]=b[i<span class="number">-1</span>]+a[i];</span><br><span class="line">    sort(b+<span class="number">1</span>,b+n+<span class="number">1</span>);</span><br><span class="line">    x=w-b[n];x=min(w,x);</span><br><span class="line">    y=-b[<span class="number">1</span>];y=max(<span class="number">0</span>,y);</span><br><span class="line">    <span class="keyword">if</span>(x-y+<span class="number">1</span>&lt;=<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x-y+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 978 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> lv0 </tag>
            
            <tag> 排序 </tag>
            
            <tag> 前缀和 </tag>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 978 B</title>
      <link href="/2019/03/12/cf978/cf978b/"/>
      <url>/2019/03/12/cf978/cf978b/</url>
      
        <content type="html"><![CDATA[<h1 id="codeforces-978-b-题解"><span class="math inline">\(Codeforces 978 B\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/978/problem/B" target="_blank" rel="noopener">978B</a></p><p>题意：</p><p>给出一串字符串，判断里面有对少个连续 $ 3$的 <span class="math inline">\(“x”\)</span>。注意 <span class="math inline">\(xxxx\)</span> 里面有两个 <span class="math inline">\(”xxx“\)</span></p><a id="more"></a><p>​ 思考： 只需要读入之后，对于每个字符进行识别，如果是 <span class="math inline">\(x\)</span> 的话，计数器 <span class="math inline">\(cnt ++\)</span> 否则置零。 然后每次判断是否 $ 3$是的话 $ ans++ $</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">&#123;</span><br><span class="line">f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">ch=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">&#123;</span><br><span class="line">x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">ch=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">x/=<span class="number">10</span>;</span><br><span class="line">&#125;<span class="keyword">while</span>(x);</span><br><span class="line"><span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,cnt,ans;</span><br><span class="line"><span class="keyword">char</span> s[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">'x'</span>)</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(cnt&gt;=<span class="number">3</span>)</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 978 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> lv0 </tag>
            
            <tag> 暴力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 977 C</title>
      <link href="/2019/03/12/cf977/cf977c/"/>
      <url>/2019/03/12/cf977/cf977c/</url>
      
        <content type="html"><![CDATA[<h1 id="codeforces-977-c-题解"><span class="math inline">\(Codeforces 977 C\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/977/problem/C" target="_blank" rel="noopener">977C</a></p><p>题意：</p><p>给你一个长度为 <span class="math inline">\(n\)</span> 的整数序列和一个数 <span class="math inline">\(k\)</span> 。</p><p>您应该在 <span class="math inline">\([1 , 1e9]\)</span>（即 $1 x 1e9 $）的范围内输出任何整数 <span class="math inline">\(x\)</span>，使得给定序列的 <span class="math inline">\(k\)</span> 个元素恰好小于或等于x。</p><p>请注意，该序列可以包含相同的元素。</p><p>如果没有这样的<span class="math inline">\(x\)</span>，则输出 <span class="math inline">\(“-1”\)</span>（不含引号） ​ <a id="more"></a></p><p>思考： 直接进行排序，然后吧第 <span class="math inline">\(k\)</span> 的元素输出</p><p>然后你就会发现 <span class="math inline">\(Wa\)</span> 了</p><p>少了一种情况</p><p>如果 <span class="math inline">\(k==0\)</span> 时，而当前 <span class="math inline">\(a_1\)</span> 却等于 <span class="math inline">\(1\)</span> 你会发现其实是没有数字满足要求的</p><p>所以还要特判一下 <span class="math inline">\(k==0\)</span> 的情况就好了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 2000100</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    k=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        a[i]=read();</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> tmp=a[k],sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(tmp&gt;=a[i])</span><br><span class="line">            sum++;</span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[<span class="number">1</span>]==<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[<span class="number">1</span>]<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sum==k)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,tmp);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 977 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> lv0 </tag>
            
            <tag> 暴力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 977 B</title>
      <link href="/2019/03/12/cf977/cf977b/"/>
      <url>/2019/03/12/cf977/cf977b/</url>
      
        <content type="html"><![CDATA[<h1 id="codeforces-977-b-题解"><span class="math inline">\(Codeforces 977 B\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/977/problem/B" target="_blank" rel="noopener">977B</a></p><p>题意：</p><p>给定一个长度为 <span class="math inline">\(n\)</span> 的字符串 <span class="math inline">\(s\)</span> ,找到出现次数最多的连续两个字符 ​ <a id="more"></a></p><p>思考： 直接按照题意暴力就好了，没什么好说的</p><p>复杂度 <span class="math inline">\(O(n^2)\)</span></p><p>更新的时候连带位置进行更新</p><p>2019-04-17: 现在看自己的代码好丑。。。。。明明可以 <span class="math inline">\(O(nlogn)\)</span> 的复杂度，偏要麻烦一点</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>,<span class="keyword">int</span>&gt;mp;</span><br><span class="line"><span class="built_in">string</span> ans,s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,max=<span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;s.size();++i) mp[s.substr(i<span class="number">-1</span>,<span class="number">2</span>)]++;<span class="comment">//s.substr（i-1,2）函数是从s中从i-1个字符开始取出长为2的串</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span>&amp;x:mp) <span class="keyword">if</span>(x.second&gt;max) ans=x.first,max=x.second;<span class="comment">//遍历map，更新ans</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>比赛代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,maxn,mn;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">1</span>,sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n<span class="number">-1</span>;j++)</span><br><span class="line">            <span class="keyword">if</span>(s[j]!=s[i]||s[j+<span class="number">1</span>]!=s[i+<span class="number">1</span>])</span><br><span class="line">                flag=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                sum++;</span><br><span class="line">        <span class="keyword">if</span>(maxn&lt;sum)</span><br><span class="line">        &#123;</span><br><span class="line">            maxn=sum;</span><br><span class="line">            mn=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c%c\n"</span>,s[mn],s[mn+<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 977 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> lv0 </tag>
            
            <tag> 暴力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 978 F</title>
      <link href="/2019/03/12/cf978/cf978F/"/>
      <url>/2019/03/12/cf978/cf978F/</url>
      
        <content type="html"><![CDATA[<h1 id="codeforces-978f-题解"><span class="math inline">\(Codeforces 978F\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/978/problem/f" target="_blank" rel="noopener">978F</a></p><p>题意： ​ ​<br>给出 <span class="math inline">\(n\)</span> 个人的能力值，给出 <span class="math inline">\(m\)</span> 对关系，如果一个人的能力值比另一个人的能力值高，并且他们两没有关系的话，那么，这个人就可以成为那个人的导师。求出每个人最多可以是几个人的导师。 ​</p><a id="more"></a><p>思考：</p><p>开一个 <span class="math inline">\(structt\)</span> 记录当前这个人的 位置、能力值、答案</p><p>然后按照能力值从小到大排序。排序之后按照二分出当前的能量值是第几大的能力值，更新答案。</p><p>处理关系，每次输进来，在较大的一个能力值中减掉一个就好了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 200010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line">structt st</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> id,v,ans;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(st x,st y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.v&lt;y.v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(st x,st y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.id&lt;y.id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    k=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i].v=read();</span><br><span class="line">        a[i].id=i;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp); </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> l=<span class="number">0</span>,r=n,tmp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;=r)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[mid].v&lt;a[i].v)</span><br><span class="line">                tmp=mid,l=mid+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                r=mid<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a[i].ans=tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp1);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        x=read();y=read();</span><br><span class="line">        <span class="keyword">if</span>(a[x].v&lt;a[y].v)</span><br><span class="line">            a[y].ans--;</span><br><span class="line">        <span class="keyword">if</span>(a[y].v&lt;a[x].v)</span><br><span class="line">            a[x].ans--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i].ans);<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 978 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> lv0 </tag>
            
            <tag> 排序 </tag>
            
            <tag> 二分查找 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 977 A</title>
      <link href="/2019/03/12/cf977/cf977a/"/>
      <url>/2019/03/12/cf977/cf977a/</url>
      
        <content type="html"><![CDATA[<h1 id="codeforces-977-a-题解"><span class="math inline">\(Codeforces 977 A\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/977/problem/A" target="_blank" rel="noopener">977A</a></p><p>题意：</p><p>给定一个整数 <span class="math inline">\(n\)</span> 然后给定一个操作次数 <span class="math inline">\(k\)</span> ,要求输出最后根据操作的数字</p><p>操作如下：</p><ol type="1"><li>当最后一位不为<span class="math inline">\(0\)</span> 则减 <span class="math inline">\(1\)</span></li><li>否则除 <span class="math inline">\(10\)</span> ​ <a id="more"></a></li></ol><p>思考： 直接按照题意模拟就好了，没什么好说的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> ll x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line">ll n,k;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    k=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">10</span>!=<span class="number">0</span>)</span><br><span class="line">            n--;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            n/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 977 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> lv0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 978 C</title>
      <link href="/2019/03/12/cf978/cf978c/"/>
      <url>/2019/03/12/cf978/cf978c/</url>
      
        <content type="html"><![CDATA[<h1 id="codeforces-978-c-题解"><span class="math inline">\(Codeforces 978 C\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/978/problem/C" target="_blank" rel="noopener">978C</a></p><p>题意： ​ ​ <span class="math inline">\(n\)</span> 个宿舍，每个宿舍有 <span class="math inline">\(a_i\)</span> 个房间，再给你 <span class="math inline">\(m\)</span>个数，问每个数在第几个宿舍的第几个房间。 ​ <a id="more"></a> ​ 思考： 读入房间 <span class="math inline">\(a_i\)</span>之后，我们做一遍前缀和，因为输入保证 <span class="math inline">\(m\)</span> 个数字保证递增，所以可以边读如边处理，如果小于当前的 <span class="math inline">\(sum_i\)</span> 继续 $ i++ $ 否则输出就好了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 200010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">register</span> ll x=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">&#123;</span><br><span class="line">f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">ch=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">&#123;</span><br><span class="line">x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">ch=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">x/=<span class="number">10</span>;</span><br><span class="line">&#125;<span class="keyword">while</span>(x);</span><br><span class="line"><span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,now;</span><br><span class="line">ll a[N],sum[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">m=read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i]=read();</span><br><span class="line">sum[i]=a[i]+sum[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line">ll x=read();</span><br><span class="line"><span class="keyword">while</span>(x&gt;sum[now])</span><br><span class="line">now++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %lld\n"</span>,now,x-sum[now<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 978 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> lv0 </tag>
            
            <tag> 前缀和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 978 D</title>
      <link href="/2019/03/12/cf978/cf978d/"/>
      <url>/2019/03/12/cf978/cf978d/</url>
      
        <content type="html"><![CDATA[<h1 id="codeforces-978d-题解"><span class="math inline">\(Codeforces 978D\)</span> 题解：</h1><p><a href="http://codeforces.com/contest/978/problem/D" target="_blank" rel="noopener">978D</a></p><p>题意： ​ ​<br>给 <span class="math inline">\(n\)</span> 个数字 每个数字可以 <span class="math inline">\(+1\)</span> <span class="math inline">\(-1\)</span> 或者 不变，问最少改变几位数字，可以使得 这个 这个序列是单调的，递增或递减或不变 ​</p><a id="more"></a><p>思考：</p><p>读入序列以后，我们考虑最后既然是等差数列，那么公差一定是不变的，也就是可以是 <span class="math inline">\(a_i - a_{i-1}\)</span> 所以我们只要枚举前两个的改变方式，一共有 <span class="math inline">\(3*3=9\)</span> 种，然后枚举完公差以后我们可以推出来完整数组，然后和原数组比较，更新答案</p><p>一个小细节：就是会出现无法改变成要求的数组，那么我们需要记一下一共无法改变多少次，如果是 <span class="math inline">\(9\)</span>次的话，输出 <span class="math inline">\(-1\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,ans,flag,sum;</span><br><span class="line"><span class="keyword">int</span> a[N],b[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),ans=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        a[i]=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> l=<span class="number">-1</span>;l&lt;=<span class="number">1</span>;l++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> k=<span class="number">-1</span>;k&lt;=<span class="number">1</span>;k++)</span><br><span class="line">        &#123;</span><br><span class="line">            b[<span class="number">1</span>]=a[<span class="number">1</span>]+l;</span><br><span class="line">            b[<span class="number">2</span>]=a[<span class="number">2</span>]+k;</span><br><span class="line">            <span class="keyword">int</span> c=b[<span class="number">2</span>]-b[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=n;i++)</span><br><span class="line">                b[i]=b[i<span class="number">-1</span>]+c;</span><br><span class="line">            <span class="keyword">int</span> cnt=<span class="number">0</span>;flag=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">                <span class="keyword">if</span>(b[i]!=a[i])</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="built_in">abs</span>(b[i]-a[i])&gt;<span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        flag=<span class="number">1</span>;</span><br><span class="line">                        sum++;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    cnt++;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">if</span>(!flag)</span><br><span class="line">                ans=min(ans,cnt);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span>(sum!=<span class="number">9</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 978 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> Codeforces </tag>
            
            <tag> 题解 </tag>
            
            <tag> lv0 </tag>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组合数学引论-绪论</title>
      <link href="/2019/03/12/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6%E5%BC%95%E8%AE%BA-%E7%BB%AA%E8%AE%BA/"/>
      <url>/2019/03/12/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6%E5%BC%95%E8%AE%BA-%E7%BB%AA%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="组合数学引论">组合数学引论</h1><h2 id="绪论">绪论</h2><p>组合数学用于解决生活中的组合问题</p><p>又称组合学、组合分析</p><p>问题分类（共有四种）</p><p>一、 存在性问题（安排存在性问题）</p><p>应用于解决在有限个对象中按照满足要求的条件性质进行安排。</p><p>符合要求的安排与否。需要通过组合数学证明是否存在</p><p>二、计数类问题 （安排的枚举和分类）</p><p>在基于上一种问题的存在情况之后。会需要解决有多少种安排存在的情况</p><p>有多少种可能的安排方案？</p><p>如何对安排进行分类</p><p>三、构造性问题</p><p>基于前两种问题之上</p><p>已经确定该问题具有存在方案后，要求根据方案具体的给出一种符合题意的安排，符合条件。</p><p>也就是需要给出求其某一特定的解的 <strong>算法</strong></p><p>四、优化类问题</p><p>在问题二成立的情况下，不同分配方案附带的消耗或者收益是不同的</p><p>所以在实际应用中，需要在全部存在方案中找到最优或近乎最优的安排方案 <strong>算法</strong></p>]]></content>
      
      
      <categories>
          
          <category> Book </category>
          
          <category> 组合数学引论 </category>
          
          <category> 绪论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Book </tag>
            
            <tag> 学习 </tag>
            
            <tag> 数学 </tag>
            
            <tag> 组合数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 978 VP 总结</title>
      <link href="/2019/03/12/cf978/cf978/"/>
      <url>/2019/03/12/cf978/cf978/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="比赛时间">比赛时间</h1><p>​ 2019-03-12 08:00～10:30</p><a id="more"></a><h2 id="a"><span class="math inline">\(A\)</span></h2><p><a href="http://codeforces.com/contest/978/problem/A" target="_blank" rel="noopener">Codeforces 978 a</a></p><p>一句话题意： ​ 给定 <span class="math inline">\(n\)</span> 个整数，要求输出数字种类，并且去除重复数字后输出，如果是重复的元素则以最后一次出现的次序完成输出。</p><p>开场看完直接用rub记一下然后存一下，倒着输出就好了</p><p>一遍过</p><p><a href="https://jasonyjie.github.io/2019/03/12/cf978/cf978a/">订正</a></p><h2 id="b"><span class="math inline">\(B\)</span></h2><p><a href="http://codeforces.com/contest/978/problem/b" target="_blank" rel="noopener">Codeforces 978 b</a></p><p>题意：</p><p>给出一串字符串，判断里面有对少个连续 $ 3$的 <span class="math inline">\(“x”\)</span>。注意 <span class="math inline">\(xxxx\)</span> 里面有两个 <span class="math inline">\(”xxx“\)</span></p><p>直接顺着扫一遍，遇到就加，否则清零。中间判一下是否大于等于3就好了</p><p>一遍过</p><p><a href="https://jasonyjie.github.io/2019/03/12/cf978/cf978b/">订正</a></p><h2 id="c"><span class="math inline">\(C\)</span></h2><p><a href="http://codeforces.com/contest/978/problem/c" target="_blank" rel="noopener">Codeforces 978 c</a></p><p>一句话题意： ​ ​ <span class="math inline">\(n\)</span> 个宿舍，每个宿舍有 <span class="math inline">\(a_i\)</span> 个房间，再给你 <span class="math inline">\(m\)</span>个数，问每个数在第几个宿舍的第几个房间。</p><p>直接做一下前缀和，因为保证递增（不保证排个序），然后顺着扫一遍就好了</p><p>一遍过</p><p><a href="https://jasonyjie.github.io/2019/03/12/cf978/cf978c/">订正</a></p><h2 id="d"><span class="math inline">\(D\)</span></h2><p><a href="http://codeforces.com/contest/978/problem/d" target="_blank" rel="noopener">Codeforces 978 d</a></p><p>题意： ​ ​<br>给 <span class="math inline">\(n\)</span> 个数字 每个数字可以 <span class="math inline">\(+1\)</span> <span class="math inline">\(-1\)</span> 或者 不变，问最少改变几位数字，可以使得 这个 这个序列是单调的，递增或递减或不变</p><p>一开始脑袋抽住了，感觉不会做啊，有点难啊</p><p>后来冷静了一下感觉</p><p>既然是等差数列，公差相等</p><p>然后开始无脑码</p><p>又是枚举递增递减，又是枚举公差，又是枚举头尾，写了200+</p><p>（自己是真的 <span class="math inline">\(SB\)</span> ）</p><p>太长了 <span class="math inline">\(pp\)</span> 以后交了 <span class="math inline">\(WA\)</span> 时间不够了过了</p><p>然后看了眼 <span class="math inline">\(E\)</span> 写完 <span class="math inline">\(A\)</span> 了以后，回头来看冷静了一下</p><p>其实就是枚举一下增量，第一个和第二个分别是哪个操作</p><p>然后用公差处理数组，最后更新 <span class="math inline">\(min\)</span></p><p><span class="math inline">\(A\)</span> 了</p><p><a href="https://jasonyjie.github.io/2019/03/12/cf978/cf978d/">订正</a></p><h2 id="e"><span class="math inline">\(E\)</span></h2><p><a href="http://codeforces.com/contest/978/problem/e" target="_blank" rel="noopener">Codeforces 978 E</a></p><p>题意： ​ ​ ​共 <span class="math inline">\(N\)</span> 站，汽车每站变化 <span class="math inline">\(a_i\)</span> 人。问刚开始汽车上人数有多少种可能？</p><p>看完以后直接做了一遍前缀和，然后更新人数最多和最少的时候。最后在区间算一下就好了</p><p>然后</p><p>就<span class="math inline">\(Wa\)</span> 了。冷静了一下想了一下细节，没有处理min和max 边界没处理好</p><p>最后 <span class="math inline">\(A\)</span> 了</p><p><a href="https://jasonyjie.github.io/2019/03/12/cf978/cf978E/">订正</a></p><h2 id="f"><span class="math inline">\(F\)</span></h2><p><a href="http://codeforces.com/contest/978/problem/f" target="_blank" rel="noopener">Codeforces 978 F</a></p><p>一句话题意：给出n个人的能力值，给出m对关系，如果一个人的能力值比另一个人的能力值高，并且他们两没有关系的话，那么，这个人就可以成为那个人的导师。求出每个人最多可以是几个人的导师。</p><p>直接按照能力排序，找到当前第 <span class="math inline">\(i\)</span> 个人的能力值 是第几大（不是第几个！！有重复），然后按照关系减一减就好了</p><p>过了</p><p><a href="https://jasonyjie.github.io/2019/03/12/cf978/cf978F/">订正</a></p><h2 id="g"><span class="math inline">\(G\)</span></h2><p>没有开，后面看订正篇吧</p><p>一句话题意：</p><p>共有 <span class="math inline">\(n\)</span> 天，<span class="math inline">\(m\)</span> 场考试编号 <span class="math inline">\(1～m\)</span> ，每场考试给出</p><p><span class="math inline">\(s\)</span> 题库发布的时间（即代表从此时起可以开始复习这门科目）</p><p><span class="math inline">\(d\)</span> 这门科目考试的时间</p><p><span class="math inline">\(t\)</span> 需要复习的时间。</p><p>现在，每天你可以选择复习，或者休息，只能选其中一样！如果是考试的时间，则必须去考试！</p><p>问，你是否可以复习完所有科目并通过考试 如果可以，输出安排表，<span class="math inline">\(1～m\)</span> 代表复习功课，<span class="math inline">\(0\)</span> 表示休息，<span class="math inline">\(m+1\)</span> 表示考试。</p><p>如果不能，输出 <span class="math inline">\(-1\)</span>。</p><p>明显的贪心题目，具体细节看订正</p><p><a href="https://jasonyjie.github.io/2019/03/12/cf978/cf978g/">订正</a></p><p>总结：</p><p>1.还是菜的抠脚</p><p>2.时间规划不太对</p><p>3.细节考虑不周全</p><p>4.容易慌乱，代码冗余，思维过于复杂，绕弯子。</p><h1 id="over"><span class="math inline">\(Over!\)</span></h1>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 978 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>作息计划</title>
      <link href="/2019/03/11/%E4%BD%9C%E6%81%AF%E8%AE%A1%E5%88%92/"/>
      <url>/2019/03/11/%E4%BD%9C%E6%81%AF%E8%AE%A1%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h1 id="作息计划">作息计划</h1><a id="more"></a><table><thead><tr class="header"><th style="text-align: center;">序号</th><th style="text-align: center;">时间</th><th style="text-align: center;">内容</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">A</td><td style="text-align: center;">06:00</td><td style="text-align: center;">起床</td></tr><tr class="even"><td style="text-align: center;">B</td><td style="text-align: center;">06:30</td><td style="text-align: center;">背单词</td></tr><tr class="odd"><td style="text-align: center;">C</td><td style="text-align: center;">07:30～08:00</td><td style="text-align: center;">整理文件夹</td></tr><tr class="even"><td style="text-align: center;">D</td><td style="text-align: center;">08:00～10:00</td><td style="text-align: center;">CF VP</td></tr><tr class="odd"><td style="text-align: center;">E</td><td style="text-align: center;">10:00~11:40</td><td style="text-align: center;">订正&amp;&amp;总结</td></tr><tr class="even"><td style="text-align: center;">F</td><td style="text-align: center;">12:30～13:00</td><td style="text-align: center;">休息</td></tr><tr class="odd"><td style="text-align: center;">G</td><td style="text-align: center;">13:00～14:00</td><td style="text-align: center;">练字</td></tr><tr class="even"><td style="text-align: center;">H</td><td style="text-align: center;">14:00～15:00</td><td style="text-align: center;">学习知识点</td></tr><tr class="odd"><td style="text-align: center;">I</td><td style="text-align: center;">15:00～18:00</td><td style="text-align: center;">luogu练习</td></tr><tr class="even"><td style="text-align: center;">J</td><td style="text-align: center;">18:00～20:00</td><td style="text-align: center;">CF练习</td></tr><tr class="odd"><td style="text-align: center;">K</td><td style="text-align: center;">20:00～22:00</td><td style="text-align: center;">锻炼</td></tr><tr class="even"><td style="text-align: center;">L</td><td style="text-align: center;">22:00～24:00</td><td style="text-align: center;">NOIP</td></tr><tr class="odd"><td style="text-align: center;">M</td><td style="text-align: center;">24:00～02:00</td><td style="text-align: center;">练习</td></tr><tr class="even"><td style="text-align: center;">N</td><td style="text-align: center;">02:00～02:30</td><td style="text-align: center;">整理总结</td></tr></tbody></table><p>执行: 2019-04-03</p>]]></content>
      
      
      <categories>
          
          <category> 计划 </category>
          
          <category> 作息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习计划</title>
      <link href="/2019/03/11/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
      <url>/2019/03/11/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h1 id="学习计划">学习计划</h1><a id="more"></a><table><thead><tr class="header"><th style="text-align: left;">上级</th><th style="text-align: center;">学习内容</th><th style="text-align: center;">日期</th><th style="text-align: center;">是否完成</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">语法</td><td style="text-align: center;">BFS（宽度优先搜索遍历）</td><td style="text-align: center;">4月3日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">语法</td><td style="text-align: center;">DFS（深度优先搜索遍历）</td><td style="text-align: center;">4月3日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">语法</td><td style="text-align: center;">记忆化搜索</td><td style="text-align: center;">4月3日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">语法</td><td style="text-align: center;">简单动态规划</td><td style="text-align: center;">4月4日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">语法</td><td style="text-align: center;">线性dp 多维dp 树形dp 背包dp</td><td style="text-align: center;">4月4日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">语法</td><td style="text-align: center;">二分答案</td><td style="text-align: center;">4月5日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">语法</td><td style="text-align: center;">三分查找</td><td style="text-align: center;">4月5日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">数学</td><td style="text-align: center;">快速幂</td><td style="text-align: center;">4月5日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">数学</td><td style="text-align: center;">欧拉筛求质数</td><td style="text-align: center;">4月5日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">BFS</td><td style="text-align: center;">BFS + hash</td><td style="text-align: center;">4月6日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">BFS</td><td style="text-align: center;">双向BFS</td><td style="text-align: center;">4月6日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">深搜剪枝</td><td style="text-align: center;">最优性剪枝</td><td style="text-align: center;">4月6日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">深搜剪枝</td><td style="text-align: center;">可行性剪枝</td><td style="text-align: center;">4月6日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">BFS</td><td style="text-align: center;">迭代加深</td><td style="text-align: center;">4月6日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">BFS</td><td style="text-align: center;">启发式搜索</td><td style="text-align: center;">4月6日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">语法</td><td style="text-align: center;">邻接矩阵</td><td style="text-align: center;">4月7日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">最短路径</td><td style="text-align: center;">Dijkstra</td><td style="text-align: center;">4月7日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">最短路径</td><td style="text-align: center;">SPFA</td><td style="text-align: center;">4月7日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">最短路径</td><td style="text-align: center;">floyd 无向图传递闭包</td><td style="text-align: center;">4月7日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">语法</td><td style="text-align: center;">并查集</td><td style="text-align: center;">4月8日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">图论</td><td style="text-align: center;">Kruskal</td><td style="text-align: center;">4月8日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">图论</td><td style="text-align: center;">Prim</td><td style="text-align: center;">4月8日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">图论</td><td style="text-align: center;">拓扑序</td><td style="text-align: center;">4月9日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">最短路径</td><td style="text-align: center;">差分约束系统</td><td style="text-align: center;">4月9日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">语法</td><td style="text-align: center;">链表思想 领接表</td><td style="text-align: center;">4月9日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">字符串</td><td style="text-align: center;">最小表示法</td><td style="text-align: center;">4月10日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">字符串</td><td style="text-align: center;">最长回文子串Manacher</td><td style="text-align: center;">4月10日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">字符串</td><td style="text-align: center;">Hash</td><td style="text-align: center;">4月10日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">数学</td><td style="text-align: center;">矩阵乘法</td><td style="text-align: center;">4月10日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">语法</td><td style="text-align: center;">STL</td><td style="text-align: center;">4月10日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">树</td><td style="text-align: center;">树的重心</td><td style="text-align: center;">4月11日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">树</td><td style="text-align: center;">树的直径</td><td style="text-align: center;">4月11日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">简单DP</td><td style="text-align: center;">动态规划</td><td style="text-align: center;">4月12日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">位运算</td><td style="text-align: center;">状压dp</td><td style="text-align: center;">4月12日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">图论</td><td style="text-align: center;">图的联通性Tarjan（有向图）</td><td style="text-align: center;">4月13日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">图论</td><td style="text-align: center;">割点割边点双边双（无向图）</td><td style="text-align: center;">4月13日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">图论</td><td style="text-align: center;">LCA（含rmq）</td><td style="text-align: center;">4月14日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">图论</td><td style="text-align: center;">2-sat</td><td style="text-align: center;">4月15日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">网络流</td><td style="text-align: center;">最大流</td><td style="text-align: center;">4月15日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">网络流</td><td style="text-align: center;">费用流</td><td style="text-align: center;">4月15日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">数据结构</td><td style="text-align: center;">堆</td><td style="text-align: center;">4月16日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">数据结构</td><td style="text-align: center;">树状数组</td><td style="text-align: center;">4月16日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">数据结构</td><td style="text-align: center;">线段树</td><td style="text-align: center;">4月16日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">线段树</td><td style="text-align: center;">扫描线（先学线段树）</td><td style="text-align: center;">4月16日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">常见方法</td><td style="text-align: center;">莫队和树上莫队</td><td style="text-align: center;">4月17日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">常见方法</td><td style="text-align: center;">DFS序</td><td style="text-align: center;">4月17日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">常见方法</td><td style="text-align: center;">前缀和和差分</td><td style="text-align: center;">4月17日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">动态规划</td><td style="text-align: center;">背包9讲</td><td style="text-align: center;">4月18日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">动态规划</td><td style="text-align: center;">状态压缩</td><td style="text-align: center;">4月18日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">动态规划</td><td style="text-align: center;">单调队列</td><td style="text-align: center;">4月19日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">动态规划</td><td style="text-align: center;">四边形不等式</td><td style="text-align: center;">4月19日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">动态规划</td><td style="text-align: center;">高级数据结构优化</td><td style="text-align: center;">4月20日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">动态规划</td><td style="text-align: center;">斜率优化</td><td style="text-align: center;">4月21日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">动态规划</td><td style="text-align: center;">划分数问题</td><td style="text-align: center;">4月21日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">搜索</td><td style="text-align: center;">DP其余优化</td><td style="text-align: center;">4月21日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">搜索</td><td style="text-align: center;">搜索DLX</td><td style="text-align: center;">4月22日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">搜索</td><td style="text-align: center;">整数分块</td><td style="text-align: center;">4月22日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">数学</td><td style="text-align: center;">欧几里得</td><td style="text-align: center;">4月23日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">数学</td><td style="text-align: center;">扩展欧几里得 乘法逆元</td><td style="text-align: center;">4月23日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">数学</td><td style="text-align: center;">高斯消元</td><td style="text-align: center;">4月24日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">数学</td><td style="text-align: center;">中国剩余定理</td><td style="text-align: center;">4月25日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">数学</td><td style="text-align: center;">大数因式分解pollard-rho</td><td style="text-align: center;">4月26日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">数学</td><td style="text-align: center;">大质数判断 Miller-Rabin</td><td style="text-align: center;">4月26日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">数学</td><td style="text-align: center;">博弈SG</td><td style="text-align: center;">4月27日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">数学</td><td style="text-align: center;">欧拉函数</td><td style="text-align: center;">4月28日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">计算几何</td><td style="text-align: center;">点积、叉积</td><td style="text-align: center;">4月29日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">计算几何</td><td style="text-align: center;">凸包</td><td style="text-align: center;">4月29日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">字符串</td><td style="text-align: center;">KMP</td><td style="text-align: center;">4月30日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">字符串</td><td style="text-align: center;">扩展KMP</td><td style="text-align: center;">4月30日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">字符串</td><td style="text-align: center;">后缀数组</td><td style="text-align: center;">5月1日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">字符串</td><td style="text-align: center;">字母树</td><td style="text-align: center;">5月2日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">字符串</td><td style="text-align: center;">AC自动机</td><td style="text-align: center;">5月3日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">思维</td><td style="text-align: center;">数点问题</td><td style="text-align: center;">5月4日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">思维</td><td style="text-align: center;">块状链表</td><td style="text-align: center;">5月4日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">Treap[传统旋转式]</td><td style="text-align: center;">5月5日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">Treap [非旋转式]</td><td style="text-align: center;">5月5日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">笛卡尔树</td><td style="text-align: center;">5月6日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">左偏树</td><td style="text-align: center;">5月7日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">主席树</td><td style="text-align: center;">5月8日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">Splay</td><td style="text-align: center;">5月9日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">替罪羊树</td><td style="text-align: center;">5月10日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">树链剖分</td><td style="text-align: center;">5月11日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">Link Cut Tree</td><td style="text-align: center;">5月12日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">树套树</td><td style="text-align: center;">5月13日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">整体二分</td><td style="text-align: center;">5月14日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">CDQ分治</td><td style="text-align: center;">5月15日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">可持久化</td><td style="text-align: center;">5月16日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">KDtree</td><td style="text-align: center;">5月17日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">李超线段树</td><td style="text-align: center;">5月18日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">树的分治</td><td style="text-align: center;">点分</td><td style="text-align: center;">5月19日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">树的分治</td><td style="text-align: center;">边分</td><td style="text-align: center;">5月20日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">动态规划</td><td style="text-align: center;">数位动归</td><td style="text-align: center;">5月21日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">动态规划</td><td style="text-align: center;">概率期望计数</td><td style="text-align: center;">5月22日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">动态规划</td><td style="text-align: center;">插头</td><td style="text-align: center;">5月23日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">数学</td><td style="text-align: center;">线性筛求积性函数</td><td style="text-align: center;">5月24日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">数学</td><td style="text-align: center;">莫比乌斯反演</td><td style="text-align: center;">5月25日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">数学</td><td style="text-align: center;">杜教筛求积性函数前缀和</td><td style="text-align: center;">5月26日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">数学</td><td style="text-align: center;">容斥</td><td style="text-align: center;">5月27日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">数学</td><td style="text-align: center;">Burnside引理与Polya定理</td><td style="text-align: center;">5月28日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">数学</td><td style="text-align: center;">FFT</td><td style="text-align: center;">5月29日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">数学</td><td style="text-align: center;">NTT</td><td style="text-align: center;">5月30日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">数学</td><td style="text-align: center;">构造</td><td style="text-align: center;">5月31日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">数学</td><td style="text-align: center;">组合</td><td style="text-align: center;">6月1日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">数学</td><td style="text-align: center;">Simpson</td><td style="text-align: center;">6月2日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">数学</td><td style="text-align: center;">线性基 矩阵求逆 常系数线性递推式</td><td style="text-align: center;">6月3日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">数学</td><td style="text-align: center;">杨氏矩阵</td><td style="text-align: center;">6月4日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">计算几何</td><td style="text-align: center;">半平面交</td><td style="text-align: center;">6月5日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">计算几何</td><td style="text-align: center;">旋转卡壳</td><td style="text-align: center;">6月6日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">计算几何</td><td style="text-align: center;">凸包合并</td><td style="text-align: center;">6月7日</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">字符串</td><td style="text-align: center;">后缀自动机</td><td style="text-align: center;">6月8日</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">图论</td><td style="text-align: center;">仙人掌圆方树</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">图论</td><td style="text-align: center;">最大权闭合子图</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">图论</td><td style="text-align: center;">单纯形</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">图论</td><td style="text-align: center;">平面图转对偶图</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">图论</td><td style="text-align: center;">消圈</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">Pqtree</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">AAATree</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">ETT</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">TopTree</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">动态图连通性</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">动态图边双&amp;&amp;点双</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">高级数据结构</td><td style="text-align: center;">动态平面图判定</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">树的分治</td><td style="text-align: center;">动态树分治（点分树）</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">数学</td><td style="text-align: center;">洲阁筛</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">数学</td><td style="text-align: center;">非质数NTT</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">数学</td><td style="text-align: center;">非2^n长度fft</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">数学</td><td style="text-align: center;">多项式求逆元</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">数学</td><td style="text-align: center;">多项式除法</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">数学</td><td style="text-align: center;">多项式牛顿迭代（开根）</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">数学</td><td style="text-align: center;">多点求值</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">数学</td><td style="text-align: center;">快速插值</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">计算几何</td><td style="text-align: center;">凸包合并</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">计算几何</td><td style="text-align: center;">Voronoi Diagrams</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">计算几何</td><td style="text-align: center;">动态凸包</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">计算几何</td><td style="text-align: center;">洋葱壳</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">计算几何</td><td style="text-align: center;">平面图点定位</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">图论</td><td style="text-align: center;">O(nm)网络流</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">图论</td><td style="text-align: center;">单纯形</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">图论</td><td style="text-align: center;">LinkCutCactus</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">图论</td><td style="text-align: center;">TopCactus</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">图论</td><td style="text-align: center;">消圈</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">图论</td><td style="text-align: center;">m^2*logn费用流</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">图论</td><td style="text-align: center;">多项式复杂度线性规划</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">字符串</td><td style="text-align: center;">后缀树Ukkonen</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: left;">字符串</td><td style="text-align: center;">后缀平衡树</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: left;">字符串</td><td style="text-align: center;">后缀仙人掌</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 计划 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 977 VP 总结</title>
      <link href="/2019/03/11/cf977/cf977/"/>
      <url>/2019/03/11/cf977/cf977/</url>
      
        <content type="html"><![CDATA[<p><strong>不知道为什么我的代码<span class="math inline">\(struct\)</span> 会导致hexo 报错，所以代码有 <span class="math inline">\(bug\)</span>，谅解！</strong></p><h1 id="比赛时间">比赛时间：</h1><p>2019-03-11 08:00～10:00</p><a id="more"></a><h2 id="a">$ A $</h2><p><a href="http://codeforces.com/contest/977/problem/A" target="_blank" rel="noopener">Codeforces 977 a</a></p><p>一句话题意：</p><p>给定一个整数 <span class="math inline">\(n\)</span> 然后给定一个操作次数 <span class="math inline">\(k\)</span> ,要求输出最后根据操作的数字</p><p>操作如下：</p><ol type="1"><li>当最后一位不为<span class="math inline">\(0\)</span> 则减 <span class="math inline">\(1\)</span></li><li>否则除 <span class="math inline">\(10\)</span></li></ol><p>开场看 <span class="math inline">\(A\)</span> 这不是道 <span class="math inline">\(SB\)</span> 题？</p><p>直接模拟一下就吼了啊！</p><p>写了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> tmp=n/<span class="number">10</span>;</span><br><span class="line">tmp*=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(n%tmp!=<span class="number">0</span>)</span><br><span class="line">n--;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">n/=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><span class="math inline">\(ri !\)</span> 连 <span class="math inline">\(Wa\)</span> 三发</p><p>时间到了，算了放在这里，看下一道</p><p><a href="https://jasonyjie.github.io/2019/03/12/cf977/cf977a/">订正</a></p><h2 id="b">$ B $</h2><p><a href="http://codeforces.com/contest/977/problem/b" target="_blank" rel="noopener">Codeforces 977 b</a></p><p>一句话题意：</p><p>给定一个长度为 <span class="math inline">\(n\)</span> 的字符串 <span class="math inline">\(s\)</span> ,找到出现次数最多的连续两个字符</p><p>开 <span class="math inline">\(B\)</span> 发现数据很小，直接暴力找就好了</p><p>复杂度 $O (n^2) $</p><p>直接贴代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maX(a,b) (a&gt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> miN(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">&#123;</span><br><span class="line">f^=!(ch^<span class="string">'-'</span>);</span><br><span class="line">ch=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">&#123;</span><br><span class="line">x=((x+(x&lt;&lt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>)+(ch^<span class="string">'0'</span>);</span><br><span class="line">ch=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">int</span> sc[<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;,tot=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">sc[++tot]=x%<span class="number">10</span>;</span><br><span class="line">x/=<span class="number">10</span>;</span><br><span class="line">&#125;<span class="keyword">while</span>(x);</span><br><span class="line"><span class="keyword">while</span>(tot) <span class="built_in">putchar</span>(<span class="string">'0'</span>+sc[tot--]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,maxn,mn;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> flag=<span class="number">1</span>,sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n<span class="number">-1</span>;j++)</span><br><span class="line"><span class="keyword">if</span>(s[j]!=s[i]||s[j+<span class="number">1</span>]!=s[i+<span class="number">1</span>])</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">sum++;</span><br><span class="line"><span class="keyword">if</span>(maxn&lt;sum)</span><br><span class="line">&#123;</span><br><span class="line">maxn=sum;</span><br><span class="line">mn=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c%c\n"</span>,s[mn],s[mn+<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://jasonyjie.github.io/2019/03/12/cf977/cf977b/">订正</a></p><h2 id="c">$ C $</h2><p><a href="http://codeforces.com/contest/977/problem/c" target="_blank" rel="noopener">Codeforces 977 c</a></p><p>一句话题意：</p><p>给你一个长度为 <span class="math inline">\(n\)</span> 的整数序列和一个数 <span class="math inline">\(k\)</span> 。</p><p>您应该在 <span class="math inline">\([1 , 1e9]\)</span>（即 $1 x 1e9 $）的范围内输出任何整数 <span class="math inline">\(x\)</span>，使得给定序列的 <span class="math inline">\(k\)</span> 个元素恰好小于或等于x。</p><p>请注意，该序列可以包含相同的元素。</p><p>如果没有这样的<span class="math inline">\(x\)</span>，则输出 <span class="math inline">\(“-1”\)</span>（不含引号）</p><p>拿到 $ C $以后，想了一下直接 $ Sort $ 一下就好了，然后。。。。。。</p><p>就 $ Wa $ 了</p><p>然后就跳掉了</p><p><a href="https://jasonyjie.github.io/2019/03/12/cf977/cf977c/">订正</a></p><h2 id="d">$ D $</h2><p><a href="http://codeforces.com/contest/977/problem/d" target="_blank" rel="noopener">Codeforces 977 d</a></p><p>一句话题意：</p><p>给你一个被打乱的序列，每次操作，都要把这个数除以 <span class="math inline">\(3\)</span> 或者乘 <span class="math inline">\(2\)</span> ，</p><p>使之变成下一个数，输出排序后满足条件的原序列数。</p><p>$ D $ 想了一下 直接将一个数字两次操作后的数字判一下，看是否在数列中，在的话就连边，最后有两个点是只有入变或出边的，最后直接 $ dfs $</p><p>然后写了一发。。。。</p><p>又 $ Wa $ 了。。。（长时间不打比赛不太行啊。。。）</p><p><a href="https://jasonyjie.github.io/2019/03/12/cf977/cf977d/">订正</a></p><h2 id="e">$ E $</h2><p><a href="http://codeforces.com/contest/977/problem/e" target="_blank" rel="noopener">Codeforces 977 e</a></p><p>一句话题意：</p><p>​​找到所有的单链环的个数 ​</p><p>开了 $ E $ ,的第一个反应直接建个图跑就好了</p><p>所有边都连边，记录 <span class="math inline">\(du_{i}\)</span> 然后 没有访问过的直接dfs判断是否可以就好了</p><p>全场第一次最开心。一遍交，一遍 $ Ac $</p><p>然后看了一下时间，觉得开 $ F $ ,没什么希望的</p><p>回去查错</p><p><a href="https://jasonyjie.github.io/2019/03/12/cf977/cf977e/">订正</a></p><h2 id="f">$ F $</h2><p><a href="http://codeforces.com/contest/977/problem/f" target="_blank" rel="noopener">Codeforces 977 F</a></p><p>一句话题意：</p><p>给出一个 <span class="math inline">\(n\)</span> 和 <span class="math inline">\(n\)</span> 个数的序列，然后让你找到满足两个数之间相差为 <span class="math inline">\(1\)</span> 的存在的最长的序列。</p><p>要求输出他们的下标。</p><p>类似于最长上升子序列的 <span class="math inline">\(O(nlogn)\)</span> 的做法。具体看订正</p><p><a href="https://jasonyjie.github.io/2019/03/12/cf977/cf977f/">订正</a></p><p>#查错：</p><p>$ A $ 自己 $ SB $ 直接 $ mod 10$ 就过了</p><p>$ C $ 没有考虑 $ k==0 $的情况</p><p>如果 <span class="math inline">\(k==0\)</span> 当前如果 <span class="math inline">\(a_{1}==1\)</span> 直接 <span class="math inline">\(puts(&quot;-1&quot;)\)</span></p><p>否则 直接输出 <span class="math inline">\(a_{i}-1\)</span> 就过了</p><p>$ D $ 没有开 $ double ​$......</p><h1 id="比赛结束-ac-a---e">比赛结束 $AC : A - E $</h1><p>总结：</p><p>1.缺少练习，比赛经验少</p><p>2.考虑情况不全面</p><p>3.细节不到位，粗心</p><h1 id="over">$ Over !$</h1>]]></content>
      
      
      <categories>
          
          <category> Contest </category>
          
          <category> Codeforces </category>
          
          <category> Div3 </category>
          
          <category> 977 Finished </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
